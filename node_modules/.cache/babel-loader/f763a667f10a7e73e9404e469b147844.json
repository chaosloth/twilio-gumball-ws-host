{"ast":null,"code":"var _jsxFileName = \"/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useWebSocket from \"react-use-websocket\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Loading } from \"./components/Loading\";\nimport { IndexPage } from \"./pages/IndexPage\";\nimport { Channels } from \"./pages/Channels\";\nimport { Sending } from \"./pages/Sending\";\nimport { OCR } from \"./pages/OCR\";\nimport { Validating } from \"./pages/Validating\";\nimport { Incorrect } from \"./pages/Incorrect\";\nimport { Dispense } from \"./pages/Dispense\";\nimport { Error } from \"./pages/Error\";\nimport { Button } from \"@twilio-paste/core/button\";\nimport UserContext from \"./UserContext\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Public API that will echo messages sent to it back to the client\n  const WS_HOST = window.location.origin.replace(/^http/, \"ws\");\n  const [socketUrl] = React.useState(WS_HOST);\n  const navigate = useNavigate();\n  const [name, setName] = React.useState(\"unknown\");\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [lastAddress, setLastAddress] = React.useState(\"\");\n  const DEFAULT_TIMEOUT = 30;\n  const [gameTimeout, setGameTimeoutCounter] = React.useState(DEFAULT_TIMEOUT);\n  React.useEffect(() => {\n    gameTimeout > 0 && setTimeout(() => setGameTimeoutCounter(gameTimeout - 1), 1000);\n  }, [gameTimeout]);\n  const {\n    sendMessage\n  } = useWebSocket(socketUrl, {\n    shouldReconnect: closeEvent => true,\n    reconnectAttempts: 1000000,\n    reconnectInterval: 3000,\n    onOpen: () => {\n      console.log(\"WS Opened\");\n    },\n    onMessage: message => {\n      try {\n        console.log(message.data);\n        const json = JSON.parse(message.data);\n\n        switch (json.action) {\n          case \"ping\":\n            sendMessage(JSON.stringify({\n              action: \"pong\"\n            }));\n            break;\n\n          case \"route\":\n            if (json !== null && json !== void 0 && json.route) {\n              console.log(\"Navigating to: \", json.route);\n              navigate(json.route);\n            }\n\n            break;\n\n          case \"start\":\n            setName(json.user.name);\n            setPhone(json.user.phone);\n            setEmail(json.user.email);\n            setGameTimeoutCounter(DEFAULT_TIMEOUT);\n            navigate(\"/channels\");\n            break;\n\n          case \"ocr\":\n            navigate(\"/ocr\");\n            break;\n\n          case \"error\":\n            console.error(\"Uhh, something broken\", json);\n            navigate(\"/error\");\n            break;\n\n          case \"reset\":\n            setGameTimeoutCounter(DEFAULT_TIMEOUT);\n            navigate(\"/\");\n            break;\n\n          case \"dispense\":\n            navigate(\"/dispense\");\n            break;\n\n          case \"incorrect\":\n            navigate(\"/incorrect\");\n            break;\n\n          case \"time\":\n            return;\n\n          default:\n            console.log(\"Received unknown WS JSON msg\", json);\n        }\n      } catch (err) {\n        console.error(\"Error parsing\", err);\n      }\n    }\n  });\n\n  const handleManualReset = () => {\n    setGameTimeoutCounter(DEFAULT_TIMEOUT);\n    navigate(\"/\");\n  };\n\n  const sendVerification = (method, address) => {\n    console.log(\"Requesting verification token via \", method, address);\n    const request = {\n      action: \"generate\",\n      method: method,\n      address: address\n    };\n    setLastAddress(address);\n    navigate(\"/sending\");\n    sendMessage(JSON.stringify(request));\n  };\n\n  const doVerification = token => {\n    console.log(\"Verifying token\", token);\n    const request = {\n      action: \"verify\",\n      token: token,\n      address: lastAddress\n    };\n    navigate(\"/validating\");\n    sendMessage(JSON.stringify(request));\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      name,\n      phone,\n      email\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"\",\n    element: /*#__PURE__*/React.createElement(IndexPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/channels\",\n    element: /*#__PURE__*/React.createElement(Channels, {\n      verifyVia: sendVerification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/sending\",\n    element: /*#__PURE__*/React.createElement(Sending, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ocr\",\n    element: /*#__PURE__*/React.createElement(OCR, {\n      onVerification: doVerification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/validating\",\n    element: /*#__PURE__*/React.createElement(Validating, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 46\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/incorrect\",\n    element: /*#__PURE__*/React.createElement(Incorrect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dispense\",\n    element: /*#__PURE__*/React.createElement(Dispense, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/error\",\n    element: /*#__PURE__*/React.createElement(Error, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 41\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), gameTimeout <= 0 && /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleManualReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Reset Game\")));\n};\n\n_s(App, \"Hj/Yc7x5NfujA2oYgRfgT6/BuCc=\", false, function () {\n  return [useNavigate, useWebSocket];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/App.tsx"],"names":["React","useWebSocket","useNavigate","Route","Routes","Loading","IndexPage","Channels","Sending","OCR","Validating","Incorrect","Dispense","Error","Button","UserContext","App","children","WS_HOST","window","location","origin","replace","socketUrl","useState","navigate","name","setName","phone","setPhone","email","setEmail","lastAddress","setLastAddress","DEFAULT_TIMEOUT","gameTimeout","setGameTimeoutCounter","useEffect","setTimeout","sendMessage","shouldReconnect","closeEvent","reconnectAttempts","reconnectInterval","onOpen","console","log","onMessage","message","data","json","JSON","parse","action","stringify","route","user","error","err","handleManualReset","sendVerification","method","address","request","doVerification","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport useWebSocket from \"react-use-websocket\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { Loading } from \"./components/Loading\";\nimport { IndexPage } from \"./pages/IndexPage\";\nimport { Channels } from \"./pages/Channels\";\nimport { Sending } from \"./pages/Sending\";\nimport { OCR } from \"./pages/OCR\";\nimport { Validating } from \"./pages/Validating\";\nimport { Incorrect } from \"./pages/Incorrect\";\nimport { Dispense } from \"./pages/Dispense\";\nimport { Error } from \"./pages/Error\";\n\nimport { Button } from \"@twilio-paste/core/button\";\n\nimport UserContext from \"./UserContext\";\n\nconst App: React.FC = ({ children }) => {\n  //Public API that will echo messages sent to it back to the client\n  const WS_HOST = window.location.origin.replace(/^http/, \"ws\");\n\n  const [socketUrl] = React.useState(WS_HOST);\n  const navigate = useNavigate();\n\n  const [name, setName] = React.useState<string>(\"unknown\");\n  const [phone, setPhone] = React.useState<string>(\"\");\n  const [email, setEmail] = React.useState<string>(\"\");\n  const [lastAddress, setLastAddress] = React.useState<string>(\"\");\n\n  const DEFAULT_TIMEOUT = 30;\n  const [gameTimeout, setGameTimeoutCounter] = React.useState(DEFAULT_TIMEOUT);\n  React.useEffect(() => {\n    gameTimeout > 0 &&\n      setTimeout(() => setGameTimeoutCounter(gameTimeout - 1), 1000);\n  }, [gameTimeout]);\n\n  const { sendMessage } = useWebSocket(socketUrl, {\n    shouldReconnect: (closeEvent) => true,\n    reconnectAttempts: 1000000,\n    reconnectInterval: 3000,\n    onOpen: () => {\n      console.log(\"WS Opened\");\n    },\n    onMessage: (message) => {\n      try {\n        console.log(message.data);\n        const json = JSON.parse(message.data);\n        switch (json.action) {\n          case \"ping\":\n            sendMessage(JSON.stringify({ action: \"pong\" }));\n            break;\n          case \"route\":\n            if (json?.route) {\n              console.log(\"Navigating to: \", json.route);\n              navigate(json.route);\n            }\n            break;\n          case \"start\":\n            setName(json.user.name);\n            setPhone(json.user.phone);\n            setEmail(json.user.email);\n            setGameTimeoutCounter(DEFAULT_TIMEOUT);\n            navigate(\"/channels\");\n            break;\n          case \"ocr\":\n            navigate(\"/ocr\");\n            break;\n          case \"error\":\n            console.error(\"Uhh, something broken\", json);\n            navigate(\"/error\");\n            break;\n          case \"reset\":\n            setGameTimeoutCounter(DEFAULT_TIMEOUT);\n            navigate(\"/\");\n            break;\n          case \"dispense\":\n            navigate(\"/dispense\");\n            break;\n          case \"incorrect\":\n            navigate(\"/incorrect\");\n            break;\n          case \"time\":\n            return;\n          default:\n            console.log(\"Received unknown WS JSON msg\", json);\n        }\n      } catch (err) {\n        console.error(\"Error parsing\", err);\n      }\n    },\n  });\n\n  const handleManualReset = () => {\n    setGameTimeoutCounter(DEFAULT_TIMEOUT);\n    navigate(\"/\");\n  };\n\n  const sendVerification = (method: string, address: string): void => {\n    console.log(\"Requesting verification token via \", method, address);\n    const request = {\n      action: \"generate\",\n      method: method,\n      address: address,\n    };\n    setLastAddress(address);\n    navigate(\"/sending\");\n    sendMessage(JSON.stringify(request));\n  };\n\n  const doVerification = (token: string): void => {\n    console.log(\"Verifying token\", token);\n    const request = {\n      action: \"verify\",\n      token: token,\n      address: lastAddress,\n    };\n    navigate(\"/validating\");\n    sendMessage(JSON.stringify(request));\n  };\n\n  return (\n    <UserContext.Provider value={{ name, phone, email }}>\n      <React.Suspense fallback={<Loading />}>\n        <Routes>\n          <Route path=\"\" element={<IndexPage />} />\n          <Route\n            path=\"/channels\"\n            element={<Channels verifyVia={sendVerification} />}\n          />\n          <Route path=\"/sending\" element={<Sending />} />\n          <Route\n            path=\"/ocr\"\n            element={<OCR onVerification={doVerification} />}\n          />\n          <Route path=\"/validating\" element={<Validating />} />\n          <Route path=\"/incorrect\" element={<Incorrect />} />\n          <Route path=\"/dispense\" element={<Dispense />} />\n          <Route path=\"/error\" element={<Error />} />\n        </Routes>\n        {gameTimeout <= 0 && (\n          <Button variant=\"secondary\" onClick={handleManualReset}>\n            Reset Game\n          </Button>\n        )}\n      </React.Suspense>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}