{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setUpSocketIOPing = exports.appendQueryParams = exports.parseSocketIOUrl = void 0;\n\nvar constants_1 = require(\"./constants\");\n\nexports.parseSocketIOUrl = function (url) {\n  if (url) {\n    var isSecure = /^https|wss/.test(url);\n    var strippedProtocol = url.replace(/^(https?|wss?)(:\\/\\/)?/, '');\n    var removedFinalBackSlack = strippedProtocol.replace(/\\/$/, '');\n    var protocol = isSecure ? 'wss' : 'ws';\n    return protocol + \"://\" + removedFinalBackSlack + constants_1.SOCKET_IO_PATH;\n  } else if (url === '') {\n    var isSecure = /^https/.test(window.location.protocol);\n    var protocol = isSecure ? 'wss' : 'ws';\n    var port = window.location.port ? \":\" + window.location.port : '';\n    return protocol + \"://\" + window.location.hostname + port + constants_1.SOCKET_IO_PATH;\n  }\n\n  return url;\n};\n\nexports.appendQueryParams = function (url, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  var hasParamsRegex = /\\?([\\w]+=[\\w]+)/;\n  var alreadyHasParams = hasParamsRegex.test(url);\n  var stringified = \"\" + Object.entries(params).reduce(function (next, _a) {\n    var key = _a[0],\n        value = _a[1];\n    return next + (key + \"=\" + value + \"&\");\n  }, '').slice(0, -1);\n  return \"\" + url + (alreadyHasParams ? '&' : '?') + stringified;\n};\n\nexports.setUpSocketIOPing = function (sendMessage, interval) {\n  if (interval === void 0) {\n    interval = constants_1.SOCKET_IO_PING_INTERVAL;\n  }\n\n  var ping = function () {\n    return sendMessage(constants_1.SOCKET_IO_PING_CODE);\n  };\n\n  return setInterval(ping, interval);\n};","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGaA,2BAAmB,UAACC,GAAD,EAAY;AAC1C,MAAIA,GAAJ,EAAS;AACP,QAAMC,QAAQ,GAAG,aAAaC,IAAb,CAAkBF,GAAlB,CAAjB;AACA,QAAMG,gBAAgB,GAAGH,GAAG,CAACI,OAAJ,CAAY,wBAAZ,EAAsC,EAAtC,CAAzB;AACA,QAAMC,qBAAqB,GAAGF,gBAAgB,CAACC,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAA9B;AACA,QAAME,QAAQ,GAAGL,QAAQ,GAAG,KAAH,GAAW,IAApC;AAEA,WAAUK,QAAQ,QAAR,GAAcD,qBAAd,GAAsCE,0BAAhD;AACD,GAPD,MAOO,IAAIP,GAAG,KAAK,EAAZ,EAAgB;AACrB,QAAMC,QAAQ,GAAG,SAASC,IAAT,CAAcM,MAAM,CAACC,QAAP,CAAgBH,QAA9B,CAAjB;AACA,QAAMA,QAAQ,GAAGL,QAAQ,GAAG,KAAH,GAAW,IAApC;AACA,QAAMS,IAAI,GAAGF,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,MAAIF,MAAM,CAACC,QAAP,CAAgBC,IAA3C,GAAoD,EAAjE;AAEA,WAAUJ,QAAQ,QAAR,GAAcE,MAAM,CAACC,QAAP,CAAgBE,QAA9B,GAAyCD,IAAzC,GAAgDH,0BAA1D;AACD;;AAED,SAAOP,GAAP;AACD,CAjBY;;AAmBAD,4BAAoB,UAACC,GAAD,EAAcY,MAAd,EAAsC;AAAxB;AAAAA;AAAwB;;AACrE,MAAMC,cAAc,GAAG,iBAAvB;AACA,MAAMC,gBAAgB,GAAGD,cAAc,CAACX,IAAf,CAAoBF,GAApB,CAAzB;AAEA,MAAMe,WAAW,GAAG,KAAGC,MAAM,CAACC,OAAP,CAAeL,MAAf,EAAuBM,MAAvB,CAA8B,UAACC,IAAD,EAAOC,EAAP,EAAmB;QAAXC,GAAG;QAAEC,KAAK;AACrE,WAAOH,IAAI,IAAME,GAAG,MAAH,GAAOC,KAAP,GAAY,GAAlB,CAAX;AACD,GAFsB,EAEpB,EAFoB,EAEhBC,KAFgB,CAEV,CAFU,EAEP,CAAC,CAFM,CAAvB;AAIA,SAAO,KAAGvB,GAAH,IAASc,gBAAgB,GAAG,GAAH,GAAS,GAAlC,IAAwCC,WAA/C;AACD,CATY;;AAWAhB,4BAAoB,UAACyB,WAAD,EAA2BC,QAA3B,EAA6D;AAAlC;AAAAA,eAAWlB,mCAAX;AAAkC;;AAC5F,MAAMmB,IAAI,GAAG;AAAM,sBAAW,CAACnB,+BAAD,CAAX;AAAgC,GAAnD;;AAEA,SAAOoB,WAAW,CAACD,IAAD,EAAOD,QAAP,CAAlB;AACD,CAJY","names":["exports","url","isSecure","test","strippedProtocol","replace","removedFinalBackSlack","protocol","constants_1","window","location","port","hostname","params","hasParamsRegex","alreadyHasParams","stringified","Object","entries","reduce","next","_a","key","value","slice","sendMessage","interval","ping","setInterval"],"sources":["/Users/charland/Documents/GitHub/twilio-gumball-ws-host/node_modules/react-use-websocket/src/lib/socket-io.ts"],"sourcesContent":["import { SOCKET_IO_PING_INTERVAL, SOCKET_IO_PATH, SOCKET_IO_PING_CODE } from './constants';\nimport { QueryParams, SendMessage } from './types';\n\nexport const parseSocketIOUrl = (url: string) => {\n  if (url) {\n    const isSecure = /^https|wss/.test(url);\n    const strippedProtocol = url.replace(/^(https?|wss?)(:\\/\\/)?/, '');\n    const removedFinalBackSlack = strippedProtocol.replace(/\\/$/, '');\n    const protocol = isSecure ? 'wss' : 'ws';\n\n    return `${protocol}://${removedFinalBackSlack}${SOCKET_IO_PATH}`;\n  } else if (url === '') {\n    const isSecure = /^https/.test(window.location.protocol);\n    const protocol = isSecure ? 'wss' : 'ws';\n    const port = window.location.port ? `:${window.location.port}` : '';\n\n    return `${protocol}://${window.location.hostname}${port}${SOCKET_IO_PATH}`;\n  }\n\n  return url;\n};\n\nexport const appendQueryParams = (url: string, params: QueryParams = {}): string => {\n  const hasParamsRegex = /\\?([\\w]+=[\\w]+)/;\n  const alreadyHasParams = hasParamsRegex.test(url);\n\n  const stringified = `${Object.entries(params).reduce((next, [key, value]) => {\n    return next + `${key}=${value}&`;\n  }, '').slice(0, -1)}`;\n\n  return `${url}${alreadyHasParams ? '&' : '?'}${stringified}`;\n};\n\nexport const setUpSocketIOPing = (sendMessage: SendMessage, interval = SOCKET_IO_PING_INTERVAL): any => {\n  const ping = () => sendMessage(SOCKET_IO_PING_CODE);\n\n  return setInterval(ping, interval);\n};\n"]},"metadata":{},"sourceType":"script"}