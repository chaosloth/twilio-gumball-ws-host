{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useWebSocket = void 0;\n\nvar react_1 = require(\"react\");\n\nvar constants_1 = require(\"./constants\");\n\nvar create_or_join_1 = require(\"./create-or-join\");\n\nvar get_url_1 = require(\"./get-url\");\n\nvar proxy_1 = __importDefault(require(\"./proxy\"));\n\nvar util_1 = require(\"./util\");\n\nexports.useWebSocket = function (url, options, connect) {\n  if (options === void 0) {\n    options = constants_1.DEFAULT_OPTIONS;\n  }\n\n  if (connect === void 0) {\n    connect = true;\n  }\n\n  var _a = react_1.useState(null),\n      lastMessage = _a[0],\n      setLastMessage = _a[1];\n\n  var _b = react_1.useState({}),\n      readyState = _b[0],\n      setReadyState = _b[1];\n\n  var lastJsonMessage = react_1.useMemo(function () {\n    if (lastMessage) {\n      try {\n        return JSON.parse(lastMessage.data);\n      } catch (e) {\n        return constants_1.UNPARSABLE_JSON_OBJECT;\n      }\n    }\n\n    return null;\n  }, [lastMessage]);\n  var convertedUrl = react_1.useRef(null);\n  var webSocketRef = react_1.useRef(null);\n  var startRef = react_1.useRef(function () {\n    return void 0;\n  });\n  var reconnectCount = react_1.useRef(0);\n  var messageQueue = react_1.useRef([]);\n  var webSocketProxy = react_1.useRef(null);\n  var optionsCache = react_1.useRef(options);\n  optionsCache.current = options;\n  var readyStateFromUrl = convertedUrl.current && readyState[convertedUrl.current] !== undefined ? readyState[convertedUrl.current] : url !== null && connect === true ? constants_1.ReadyState.CONNECTING : constants_1.ReadyState.UNINSTANTIATED;\n  var stringifiedQueryParams = options.queryParams ? JSON.stringify(options.queryParams) : null;\n  var sendMessage = react_1.useCallback(function (message, keep) {\n    var _a;\n\n    if (keep === void 0) {\n      keep = true;\n    }\n\n    if (constants_1.isEventSourceSupported && webSocketRef.current instanceof EventSource) {\n      console.warn('Unable to send a message from an eventSource');\n      return;\n    }\n\n    if (((_a = webSocketRef.current) === null || _a === void 0 ? void 0 : _a.readyState) === constants_1.ReadyState.OPEN) {\n      util_1.assertIsWebSocket(webSocketRef.current);\n      webSocketRef.current.send(message);\n    } else if (keep) {\n      messageQueue.current.push(message);\n    }\n  }, []);\n  var sendJsonMessage = react_1.useCallback(function (message, keep) {\n    if (keep === void 0) {\n      keep = true;\n    }\n\n    sendMessage(JSON.stringify(message), keep);\n  }, [sendMessage]);\n  var getWebSocket = react_1.useCallback(function () {\n    if (optionsCache.current.share !== true || constants_1.isEventSourceSupported && webSocketRef.current instanceof EventSource) {\n      return webSocketRef.current;\n    }\n\n    if (webSocketProxy.current === null && webSocketRef.current) {\n      util_1.assertIsWebSocket(webSocketRef.current);\n      webSocketProxy.current = proxy_1.default(webSocketRef.current, startRef);\n    }\n\n    return webSocketProxy.current;\n  }, []);\n  react_1.useEffect(function () {\n    if (url !== null && connect === true) {\n      var removeListeners_1;\n      var expectClose_1 = false;\n\n      var start_1 = function () {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var _a, protectedSetLastMessage, protectedSetReadyState;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                _a = convertedUrl;\n                return [4\n                /*yield*/\n                , get_url_1.getUrl(url, optionsCache)];\n\n              case 1:\n                _a.current = _b.sent();\n\n                protectedSetLastMessage = function (message) {\n                  if (!expectClose_1) {\n                    setLastMessage(message);\n                  }\n                };\n\n                protectedSetReadyState = function (state) {\n                  if (!expectClose_1) {\n                    setReadyState(function (prev) {\n                      var _a;\n\n                      return __assign(__assign({}, prev), convertedUrl.current && (_a = {}, _a[convertedUrl.current] = state, _a));\n                    });\n                  }\n                };\n\n                removeListeners_1 = create_or_join_1.createOrJoinSocket(webSocketRef, convertedUrl.current, protectedSetReadyState, optionsCache, protectedSetLastMessage, startRef, reconnectCount, sendMessage);\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      };\n\n      startRef.current = function () {\n        if (!expectClose_1) {\n          if (webSocketProxy.current) webSocketProxy.current = null;\n          removeListeners_1 === null || removeListeners_1 === void 0 ? void 0 : removeListeners_1();\n          start_1();\n        }\n      };\n\n      start_1();\n      return function () {\n        expectClose_1 = true;\n        if (webSocketProxy.current) webSocketProxy.current = null;\n        removeListeners_1 === null || removeListeners_1 === void 0 ? void 0 : removeListeners_1();\n        setLastMessage(null);\n      };\n    } else if (url === null || connect === false) {\n      reconnectCount.current = 0; // reset reconnection attempts\n\n      setReadyState(function (prev) {\n        var _a;\n\n        return __assign(__assign({}, prev), convertedUrl.current && (_a = {}, _a[convertedUrl.current] = constants_1.ReadyState.CLOSED, _a));\n      });\n    }\n  }, [url, connect, stringifiedQueryParams, sendMessage]);\n  react_1.useEffect(function () {\n    if (readyStateFromUrl === constants_1.ReadyState.OPEN) {\n      messageQueue.current.splice(0).forEach(function (message) {\n        sendMessage(message);\n      });\n    }\n  }, [readyStateFromUrl]);\n  return {\n    sendMessage: sendMessage,\n    sendJsonMessage: sendJsonMessage,\n    lastMessage: lastMessage,\n    lastJsonMessage: lastJsonMessage,\n    readyState: readyStateFromUrl,\n    getWebSocket: getWebSocket\n  };\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAUA;;AAEaA,uBAAe,UAC1BC,GAD0B,EAE1BC,OAF0B,EAG1BC,OAH0B,EAGH;AADvB;AAAAD,cAAmBE,2BAAnB;AAAkC;;AAClC;AAAAD;AAAuB;;AAEjB,WAAgCE,iBAA8C,IAA9C,CAAhC;AAAA,MAACC,WAAW,QAAZ;AAAA,MAAcC,cAAc,QAA5B;;AACA,WAA8BF,iBAA0B,EAA1B,CAA9B;AAAA,MAACG,UAAU,QAAX;AAAA,MAAaC,aAAa,QAA1B;;AACN,MAAMC,eAAe,GAAGL,gBAAQ;AAC9B,QAAIC,WAAJ,EAAiB;AACf,UAAI;AACF,eAAOK,IAAI,CAACC,KAAL,CAAWN,WAAW,CAACO,IAAvB,CAAP;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACV,eAAOV,kCAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD,GATuB,EAStB,CAACE,WAAD,CATsB,CAAxB;AAUA,MAAMS,YAAY,GAAGV,eAAsB,IAAtB,CAArB;AACA,MAAMW,YAAY,GAAGX,eAA6B,IAA7B,CAArB;AACA,MAAMY,QAAQ,GAAGZ,eAAmB;AAAM,gBAAK,CAAL;AAAM,GAA/B,CAAjB;AACA,MAAMa,cAAc,GAAGb,eAAe,CAAf,CAAvB;AACA,MAAMc,YAAY,GAAGd,eAA2B,EAA3B,CAArB;AACA,MAAMe,cAAc,GAAGf,eAA6B,IAA7B,CAAvB;AACA,MAAMgB,YAAY,GAAGhB,eAAgBH,OAAhB,CAArB;AACAmB,cAAY,CAACC,OAAb,GAAuBpB,OAAvB;AAEA,MAAMqB,iBAAiB,GACrBR,YAAY,CAACO,OAAb,IAAwBd,UAAU,CAACO,YAAY,CAACO,OAAd,CAAV,KAAqCE,SAA7D,GACEhB,UAAU,CAACO,YAAY,CAACO,OAAd,CADZ,GAEErB,GAAG,KAAK,IAAR,IAAgBE,OAAO,KAAK,IAA5B,GACEC,uBAAWqB,UADb,GAEErB,uBAAWsB,cALjB;AAOA,MAAMC,sBAAsB,GAAGzB,OAAO,CAAC0B,WAAR,GAAsBjB,IAAI,CAACkB,SAAL,CAAe3B,OAAO,CAAC0B,WAAvB,CAAtB,GAA4D,IAA3F;AAEA,MAAME,WAAW,GAAgBzB,oBAAY,UAAC0B,OAAD,EAAUC,IAAV,EAAqB;;;AAAX;AAAAA;AAAW;;AAChE,QAAI5B,sCAA0BY,YAAY,CAACM,OAAb,YAAgCW,WAA9D,EAA2E;AACzEC,aAAO,CAACC,IAAR,CAAa,8CAAb;AACA;AACD;;AAED,QAAI,mBAAY,CAACb,OAAb,MAAoB,IAApB,IAAoBc,aAApB,GAAoB,MAApB,GAAoBA,GAAE5B,UAAtB,MAAqCJ,uBAAWiC,IAApD,EAA0D;AACxDC,+BAAkBtB,YAAY,CAACM,OAA/B;AACAN,kBAAY,CAACM,OAAb,CAAqBiB,IAArB,CAA0BR,OAA1B;AACD,KAHD,MAGO,IAAIC,IAAJ,EAAU;AACfb,kBAAY,CAACG,OAAb,CAAqBkB,IAArB,CAA0BT,OAA1B;AACD;AACF,GAZgC,EAY9B,EAZ8B,CAAjC;AAcA,MAAMU,eAAe,GAAoBpC,oBAAY,UAAC0B,OAAD,EAAUC,IAAV,EAAqB;AAAX;AAAAA;AAAW;;AACxEF,eAAW,CAACnB,IAAI,CAACkB,SAAL,CAAeE,OAAf,CAAD,EAA0BC,IAA1B,CAAX;AACD,GAFwC,EAEtC,CAACF,WAAD,CAFsC,CAAzC;AAIA,MAAMY,YAAY,GAAGrC,oBAAY;AAC/B,QAAIgB,YAAY,CAACC,OAAb,CAAqBqB,KAArB,KAA+B,IAA/B,IAAwCvC,sCAA0BY,YAAY,CAACM,OAAb,YAAgCW,WAAtG,EAAoH;AAClH,aAAOjB,YAAY,CAACM,OAApB;AACD;;AAED,QAAIF,cAAc,CAACE,OAAf,KAA2B,IAA3B,IAAmCN,YAAY,CAACM,OAApD,EAA6D;AAC3DgB,+BAAkBtB,YAAY,CAACM,OAA/B;AACAF,oBAAc,CAACE,OAAf,GAAyBsB,gBAAiB5B,YAAY,CAACM,OAA9B,EAAuCL,QAAvC,CAAzB;AACD;;AAED,WAAOG,cAAc,CAACE,OAAtB;AACD,GAXoB,EAWlB,EAXkB,CAArB;AAaAjB,oBAAU;AACR,QAAIJ,GAAG,KAAK,IAAR,IAAgBE,OAAO,KAAK,IAAhC,EAAsC;AACpC,UAAI0C,iBAAJ;AACA,UAAIC,aAAW,GAAG,KAAlB;;AAEA,UAAMC,OAAK,GAAG;AAAA;;;;;;AACZX;AAAuB;AAAA;AAAA,kBAAMY,iBAAO/C,GAAP,EAAYoB,YAAZ,CAAN;;;AAAvBe,mBAAad,OAAb,GAAuB2B,SAAvB;;AAEMC,uCAAuB,GAAG,UAACnB,OAAD,EAAsC;AACpE,sBAAI,CAACe,aAAL,EAAkB;AAChBvC,kCAAc,CAACwB,OAAD,CAAd;AACD;AACF,iBAJK;;AAMAoB,sCAAsB,GAAG,UAACC,KAAD,EAAkB;AAC/C,sBAAI,CAACN,aAAL,EAAkB;AAChBrC,iCAAa,CAAC,gBAAI;;;AAAI,mDACjB4C,IADiB,GAEhBtC,YAAY,CAACO,OAAb,KAAoBc,SAAKA,GAACrB,YAAY,CAACO,OAAd,IAAwB8B,KAA7B,EAAkChB,EAAtD,CAFgB;AAGpB,qBAHW,CAAb;AAID;AACF,iBAPK;;AASNS,iCAAe,GAAGS,oCAChBtC,YADgB,EAEhBD,YAAY,CAACO,OAFG,EAGhB6B,sBAHgB,EAIhB9B,YAJgB,EAKhB6B,uBALgB,EAMhBjC,QANgB,EAOhBC,cAPgB,EAQhBY,WARgB,CAAlB;;;;;;SAlBY;AA4Bb,OA5BD;;AA8BAb,cAAQ,CAACK,OAAT,GAAmB;AACjB,YAAI,CAACwB,aAAL,EAAkB;AAChB,cAAI1B,cAAc,CAACE,OAAnB,EAA4BF,cAAc,CAACE,OAAf,GAAyB,IAAzB;AAC5BuB,2BAAe,SAAf,qBAAe,WAAf,GAAe,MAAf,oBAAe,EAAf;AACAE,iBAAK;AACN;AACF,OAND;;AAQAA,aAAK;AACL,aAAO;AACLD,qBAAW,GAAG,IAAd;AACA,YAAI1B,cAAc,CAACE,OAAnB,EAA4BF,cAAc,CAACE,OAAf,GAAyB,IAAzB;AAC5BuB,yBAAe,SAAf,qBAAe,WAAf,GAAe,MAAf,oBAAe,EAAf;AACAtC,sBAAc,CAAC,IAAD,CAAd;AACD,OALD;AAMD,KAjDD,MAiDO,IAAIN,GAAG,KAAK,IAAR,IAAgBE,OAAO,KAAK,KAAhC,EAAuC;AAC5Ce,oBAAc,CAACI,OAAf,GAAyB,CAAzB,CAD4C,CAChB;;AAC5Bb,mBAAa,CAAC,gBAAI;;;AAAI,qCACjB4C,IADiB,GAEhBtC,YAAY,CAACO,OAAb,KAAoBc,SAAKA,GAACrB,YAAY,CAACO,OAAd,IAAwBlB,uBAAWmD,MAAxC,EAA8CnB,EAAlE,CAFgB;AAGpB,OAHW,CAAb;AAID;AACF,GAzDD,EAyDG,CAACnC,GAAD,EAAME,OAAN,EAAewB,sBAAf,EAAuCG,WAAvC,CAzDH;AA2DAzB,oBAAU;AACR,QAAIkB,iBAAiB,KAAKnB,uBAAWiC,IAArC,EAA2C;AACzClB,kBAAY,CAACG,OAAb,CAAqBkC,MAArB,CAA4B,CAA5B,EAA+BC,OAA/B,CAAuC,mBAAO;AAC5C3B,mBAAW,CAACC,OAAD,CAAX;AACD,OAFD;AAGD;AACF,GAND,EAMG,CAACR,iBAAD,CANH;AAQA,SAAO;AACLO,eAAW,aADN;AAELW,mBAAe,iBAFV;AAGLnC,eAAW,aAHN;AAILI,mBAAe,iBAJV;AAKLF,cAAU,EAAEe,iBALP;AAMLmB,gBAAY;AANP,GAAP;AAQD,CA7IY","names":["exports","url","options","connect","constants_1","react_1","lastMessage","setLastMessage","readyState","setReadyState","lastJsonMessage","JSON","parse","data","e","convertedUrl","webSocketRef","startRef","reconnectCount","messageQueue","webSocketProxy","optionsCache","current","readyStateFromUrl","undefined","CONNECTING","UNINSTANTIATED","stringifiedQueryParams","queryParams","stringify","sendMessage","message","keep","EventSource","console","warn","_a","OPEN","util_1","send","push","sendJsonMessage","getWebSocket","share","proxy_1","removeListeners_1","expectClose_1","start_1","get_url_1","_b","protectedSetLastMessage","protectedSetReadyState","state","prev","create_or_join_1","CLOSED","splice","forEach"],"sources":["/Users/charland/Documents/GitHub/twilio-gumball-ws-host/node_modules/react-use-websocket/src/lib/use-websocket.ts"],"sourcesContent":["import { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { DEFAULT_OPTIONS, isEventSourceSupported, ReadyState, UNPARSABLE_JSON_OBJECT } from './constants';\nimport { createOrJoinSocket } from './create-or-join';\nimport { getUrl } from './get-url';\nimport websocketWrapper from './proxy';\nimport {\n  Options,\n  ReadyStateState,\n  SendMessage,\n  SendJsonMessage,\n  WebSocketMessage,\n  WebSocketHook,\n  WebSocketLike,\n} from './types';\nimport { assertIsWebSocket } from './util';\n\nexport const useWebSocket = (\n  url: string | (() => string | Promise<string>) | null,\n  options: Options = DEFAULT_OPTIONS,\n  connect: boolean = true,\n): WebSocketHook => {\n  const [lastMessage, setLastMessage] = useState<WebSocketEventMap['message'] | null>(null);\n  const [readyState, setReadyState] = useState<ReadyStateState>({});\n  const lastJsonMessage = useMemo(() => {\n    if (lastMessage) {\n      try {\n        return JSON.parse(lastMessage.data);\n      } catch (e) {\n        return UNPARSABLE_JSON_OBJECT;\n      }\n    }\n    return null;\n  },[lastMessage]);\n  const convertedUrl = useRef<string | null>(null);\n  const webSocketRef = useRef<WebSocketLike | null>(null);\n  const startRef = useRef<() => void>(() => void 0);\n  const reconnectCount = useRef<number>(0);\n  const messageQueue = useRef<WebSocketMessage[]>([]);\n  const webSocketProxy = useRef<WebSocketLike | null>(null);\n  const optionsCache = useRef<Options>(options);\n  optionsCache.current = options;\n\n  const readyStateFromUrl: ReadyState =\n    convertedUrl.current && readyState[convertedUrl.current] !== undefined ?\n      readyState[convertedUrl.current] :\n      url !== null && connect === true ?\n        ReadyState.CONNECTING :\n        ReadyState.UNINSTANTIATED;\n\n  const stringifiedQueryParams = options.queryParams ? JSON.stringify(options.queryParams) : null;\n\n  const sendMessage: SendMessage = useCallback((message, keep = true) => {\n    if (isEventSourceSupported && webSocketRef.current instanceof EventSource) {\n      console.warn('Unable to send a message from an eventSource');\n      return;\n    }\n  \n    if (webSocketRef.current?.readyState === ReadyState.OPEN) {\n      assertIsWebSocket(webSocketRef.current);\n      webSocketRef.current.send(message);\n    } else if (keep) {\n      messageQueue.current.push(message);\n    }\n  }, []);\n\n  const sendJsonMessage: SendJsonMessage = useCallback((message, keep = true) => {\n    sendMessage(JSON.stringify(message), keep);\n  }, [sendMessage]);\n  \n  const getWebSocket = useCallback(() => {\n    if (optionsCache.current.share !== true || (isEventSourceSupported && webSocketRef.current instanceof EventSource)) {\n      return webSocketRef.current;\n    }\n\n    if (webSocketProxy.current === null && webSocketRef.current) {\n      assertIsWebSocket(webSocketRef.current);\n      webSocketProxy.current = websocketWrapper(webSocketRef.current, startRef);\n    }\n\n    return webSocketProxy.current;\n  }, []);\n\n  useEffect(() => {\n    if (url !== null && connect === true) {\n      let removeListeners: () => void;\n      let expectClose = false;\n\n      const start = async () => {\n        convertedUrl.current = await getUrl(url, optionsCache);\n\n        const protectedSetLastMessage = (message: WebSocketEventMap['message']) => {\n          if (!expectClose) {\n            setLastMessage(message);\n          }\n        };\n  \n        const protectedSetReadyState = (state: ReadyState) => {\n          if (!expectClose) {\n            setReadyState(prev => ({\n              ...prev,\n              ...(convertedUrl.current && {[convertedUrl.current]: state}),\n            }));\n          }\n        };\n\n        removeListeners = createOrJoinSocket(\n          webSocketRef,\n          convertedUrl.current,\n          protectedSetReadyState,\n          optionsCache,\n          protectedSetLastMessage,\n          startRef,\n          reconnectCount,\n          sendMessage,\n        );\n      };\n\n      startRef.current = () => {\n        if (!expectClose) {\n          if (webSocketProxy.current) webSocketProxy.current = null;\n          removeListeners?.();\n          start();\n        }\n      };\n    \n      start();\n      return () => {\n        expectClose = true;\n        if (webSocketProxy.current) webSocketProxy.current = null;\n        removeListeners?.();\n        setLastMessage(null);\n      };\n    } else if (url === null || connect === false) {\n      reconnectCount.current = 0; // reset reconnection attempts\n      setReadyState(prev => ({\n        ...prev,\n        ...(convertedUrl.current && {[convertedUrl.current]: ReadyState.CLOSED}),\n      }));\n    }\n  }, [url, connect, stringifiedQueryParams, sendMessage]);\n\n  useEffect(() => {\n    if (readyStateFromUrl === ReadyState.OPEN) {\n      messageQueue.current.splice(0).forEach(message => {\n        sendMessage(message);\n      });\n    }\n  }, [readyStateFromUrl]);\n\n  return {\n    sendMessage,\n    sendJsonMessage,\n    lastMessage,\n    lastJsonMessage,\n    readyState: readyStateFromUrl,\n    getWebSocket,\n  };\n};\n"]},"metadata":{},"sourceType":"script"}