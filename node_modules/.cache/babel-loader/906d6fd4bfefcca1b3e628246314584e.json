{"ast":null,"code":"var b = Object.defineProperty,\n    H = Object.defineProperties;\nvar O = Object.getOwnPropertyDescriptors;\nvar s = Object.getOwnPropertySymbols;\nvar u = Object.prototype.hasOwnProperty,\n    z = Object.prototype.propertyIsEnumerable;\n\nvar f = (e, t, n) => t in e ? b(e, t, {\n  enumerable: !0,\n  configurable: !0,\n  writable: !0,\n  value: n\n}) : e[t] = n,\n    I = (e, t) => {\n  for (var n in t || (t = {})) u.call(t, n) && f(e, n, t[n]);\n\n  if (s) for (var n of s(t)) z.call(t, n) && f(e, n, t[n]);\n  return e;\n},\n    m = (e, t) => H(e, O(t));\n\nvar d = (e, t) => {\n  var n = {};\n\n  for (var o in e) u.call(e, o) && t.indexOf(o) < 0 && (n[o] = e[o]);\n\n  if (e != null && s) for (var o of s(e)) t.indexOf(o) < 0 && z.call(e, o) && (n[o] = e[o]);\n  return n;\n};\n\nimport * as r from \"react\";\nimport * as a from \"prop-types\";\nimport { Text as C } from \"@twilio-paste/text\";\nimport { Box as c, safelySpreadBoxProps as E } from \"@twilio-paste/box\";\nimport { isIconSizeTokenProp as F } from \"@twilio-paste/style-props\";\n\nvar g = e => e.split(\" \").map(t => t.slice(0, 1)).reduce((t, n, o, i) => o === 0 || o === i.length - 1 ? `${t}${n}` : t, \"\"),\n    S = e => {\n  if (typeof e == \"string\" && e.includes(\"sizeIcon\")) return e.replace(\"sizeIcon\", \"lineHeight\");\n  throw new Error(\"[Avatar]: size must be of type IconSizeOptions.\");\n},\n    h = e => {\n  if (typeof e == \"string\" && e.includes(\"sizeIcon\")) switch (e) {\n    case \"sizeIcon10\":\n    case \"sizeIcon20\":\n    case \"sizeIcon30\":\n    case \"sizeIcon40\":\n    case \"sizeIcon50\":\n    case \"sizeIcon60\":\n    default:\n      return \"fontSize10\";\n\n    case \"sizeIcon70\":\n      return \"fontSize20\";\n\n    case \"sizeIcon80\":\n      return \"fontSize30\";\n\n    case \"sizeIcon90\":\n      return \"fontSize40\";\n\n    case \"sizeIcon100\":\n      return \"fontSize60\";\n\n    case \"sizeIcon110\":\n      return \"fontSize70\";\n  }\n  throw new Error(\"[Avatar]: size must be of type IconSizeOptions.\");\n},\n    y = e => {\n  if (typeof e == \"string\" && e.includes(\"sizeIcon\")) switch (e) {\n    case \"sizeIcon10\":\n    case \"sizeIcon20\":\n    case \"sizeIcon30\":\n    case \"sizeIcon40\":\n    default:\n      return \"sizeIcon10\";\n\n    case \"sizeIcon50\":\n    case \"sizeIcon60\":\n      return \"sizeIcon20\";\n\n    case \"sizeIcon70\":\n      return \"sizeIcon30\";\n\n    case \"sizeIcon80\":\n      return \"sizeIcon40\";\n\n    case \"sizeIcon90\":\n      return \"sizeIcon50\";\n\n    case \"sizeIcon100\":\n      return \"sizeIcon70\";\n\n    case \"sizeIcon110\":\n      return \"sizeIcon80\";\n  }\n  throw new Error(\"[Avatar]: size must be of type IconSizeOptions.\");\n},\n    A = e => {\n  if (typeof e == \"string\") return {\n    lineHeight: S(e),\n    fontSize: h(e),\n    iconSize: y(e)\n  };\n  if (Array.isArray(e)) return {\n    lineHeight: e.map(t => t != null ? S(t) : null),\n    fontSize: e.map(t => t != null ? h(t) : null),\n    iconSize: e.map(t => t != null ? y(t) : null)\n  };\n  throw new Error(\"[Avatar]: size must be a string or an array\");\n};\n\nvar v = \"sizeIcon70\",\n    w = _ref => {\n  let {\n    name: e,\n    size: t = v,\n    src: n,\n    icon: o\n  } = _ref;\n  let i = A(t);\n\n  if (o != null) {\n    if (typeof o != \"function\" || typeof o.displayName != \"string\" || !o.displayName.includes(\"Icon\")) throw new Error(\"[Paste Avatar]: icon prop expected to be a Paste icon only.\");\n    return r.createElement(c, {\n      maxWidth: \"100%\",\n      size: t,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }, r.createElement(o, {\n      decorative: !1,\n      title: e,\n      size: i.iconSize\n    }));\n  }\n\n  return n != null ? r.createElement(c, {\n    as: \"img\",\n    alt: e,\n    maxWidth: \"100%\",\n    src: n,\n    size: t,\n    title: e\n  }) : r.createElement(C, {\n    as: \"abbr\",\n    display: \"block\",\n    fontSize: i.fontSize,\n    fontWeight: \"fontWeightBold\",\n    lineHeight: i.lineHeight,\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    title: e,\n    color: \"inherit\"\n  }, g(e));\n},\n    x = r.forwardRef((k, T) => {\n  var l = k,\n      {\n    name: e,\n    children: t,\n    size: n = v,\n    element: o = \"AVATAR\",\n    src: i,\n    icon: p\n  } = l,\n      P = d(l, [\"name\", \"children\", \"size\", \"element\", \"src\", \"icon\"]);\n  return e === void 0 && console.error(\"[Paste Avatar]: name prop is required\"), i && p ? (console.error(\"[Paste Avatar]: do not set both src and icon on Avatar\"), null) : r.createElement(c, m(I({}, E(P)), {\n    as: \"div\",\n    element: o,\n    backgroundColor: \"colorBackgroundUser\",\n    borderRadius: \"borderRadiusCircle\",\n    overflow: \"hidden\",\n    ref: T,\n    size: n,\n    color: \"colorText\"\n  }), i ? r.createElement(w, {\n    name: e,\n    size: n,\n    src: i\n  }) : r.createElement(w, {\n    name: e,\n    size: n,\n    icon: p\n  }));\n});\n\nx.displayName = \"Avatar\";\nx.propTypes = {\n  size: F,\n  name: a.string.isRequired,\n  element: a.string,\n  src: e => (e.src && e.icon && new Error(\"[Paste Avatar]: do not set both src and icon on Avatar\"), typeof e.src != \"string\" && new Error(\"[Paste Avatar]: src prop must be a string\"), null),\n  icon: e => (e.src && e.icon && new Error(\"[Paste Avatar]: do not set both src and icon on Avatar\"), typeof e.icon != \"function\" && new Error(\"[Paste Avatar]: icon prop must be a Paste Icon\"), null)\n};\nexport { x as Avatar };","map":{"version":3,"sources":["/Users/charland/Documents/GitHub/twilio-gumball-ws-host/node_modules/@twilio-paste/avatar/dist/index.es.js"],"names":["b","Object","defineProperty","H","defineProperties","O","getOwnPropertyDescriptors","s","getOwnPropertySymbols","u","prototype","hasOwnProperty","z","propertyIsEnumerable","f","e","t","n","enumerable","configurable","writable","value","I","call","m","d","o","indexOf","r","a","Text","C","Box","c","safelySpreadBoxProps","E","isIconSizeTokenProp","F","g","split","map","slice","reduce","i","length","S","includes","replace","Error","h","y","A","lineHeight","fontSize","iconSize","Array","isArray","v","w","name","size","src","icon","displayName","createElement","maxWidth","display","alignItems","justifyContent","decorative","title","as","alt","fontWeight","textAlign","textDecoration","color","x","forwardRef","k","T","l","children","element","p","P","console","error","backgroundColor","borderRadius","overflow","ref","propTypes","string","isRequired","Avatar"],"mappings":"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","sourcesContent":["var b=Object.defineProperty,H=Object.defineProperties;var O=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var u=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable;var f=(e,t,n)=>t in e?b(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,I=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&f(e,n,t[n]);if(s)for(var n of s(t))z.call(t,n)&&f(e,n,t[n]);return e},m=(e,t)=>H(e,O(t));var d=(e,t)=>{var n={};for(var o in e)u.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(e!=null&&s)for(var o of s(e))t.indexOf(o)<0&&z.call(e,o)&&(n[o]=e[o]);return n};import*as r from\"react\";import*as a from\"prop-types\";import{Text as C}from\"@twilio-paste/text\";import{Box as c,safelySpreadBoxProps as E}from\"@twilio-paste/box\";import{isIconSizeTokenProp as F}from\"@twilio-paste/style-props\";var g=e=>e.split(\" \").map(t=>t.slice(0,1)).reduce((t,n,o,i)=>o===0||o===i.length-1?`${t}${n}`:t,\"\"),S=e=>{if(typeof e==\"string\"&&e.includes(\"sizeIcon\"))return e.replace(\"sizeIcon\",\"lineHeight\");throw new Error(\"[Avatar]: size must be of type IconSizeOptions.\")},h=e=>{if(typeof e==\"string\"&&e.includes(\"sizeIcon\"))switch(e){case\"sizeIcon10\":case\"sizeIcon20\":case\"sizeIcon30\":case\"sizeIcon40\":case\"sizeIcon50\":case\"sizeIcon60\":default:return\"fontSize10\";case\"sizeIcon70\":return\"fontSize20\";case\"sizeIcon80\":return\"fontSize30\";case\"sizeIcon90\":return\"fontSize40\";case\"sizeIcon100\":return\"fontSize60\";case\"sizeIcon110\":return\"fontSize70\"}throw new Error(\"[Avatar]: size must be of type IconSizeOptions.\")},y=e=>{if(typeof e==\"string\"&&e.includes(\"sizeIcon\"))switch(e){case\"sizeIcon10\":case\"sizeIcon20\":case\"sizeIcon30\":case\"sizeIcon40\":default:return\"sizeIcon10\";case\"sizeIcon50\":case\"sizeIcon60\":return\"sizeIcon20\";case\"sizeIcon70\":return\"sizeIcon30\";case\"sizeIcon80\":return\"sizeIcon40\";case\"sizeIcon90\":return\"sizeIcon50\";case\"sizeIcon100\":return\"sizeIcon70\";case\"sizeIcon110\":return\"sizeIcon80\"}throw new Error(\"[Avatar]: size must be of type IconSizeOptions.\")},A=e=>{if(typeof e==\"string\")return{lineHeight:S(e),fontSize:h(e),iconSize:y(e)};if(Array.isArray(e))return{lineHeight:e.map(t=>t!=null?S(t):null),fontSize:e.map(t=>t!=null?h(t):null),iconSize:e.map(t=>t!=null?y(t):null)};throw new Error(\"[Avatar]: size must be a string or an array\")};var v=\"sizeIcon70\",w=({name:e,size:t=v,src:n,icon:o})=>{let i=A(t);if(o!=null){if(typeof o!=\"function\"||typeof o.displayName!=\"string\"||!o.displayName.includes(\"Icon\"))throw new Error(\"[Paste Avatar]: icon prop expected to be a Paste icon only.\");return r.createElement(c,{maxWidth:\"100%\",size:t,display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},r.createElement(o,{decorative:!1,title:e,size:i.iconSize}))}return n!=null?r.createElement(c,{as:\"img\",alt:e,maxWidth:\"100%\",src:n,size:t,title:e}):r.createElement(C,{as:\"abbr\",display:\"block\",fontSize:i.fontSize,fontWeight:\"fontWeightBold\",lineHeight:i.lineHeight,textAlign:\"center\",textDecoration:\"none\",title:e,color:\"inherit\"},g(e))},x=r.forwardRef((k,T)=>{var l=k,{name:e,children:t,size:n=v,element:o=\"AVATAR\",src:i,icon:p}=l,P=d(l,[\"name\",\"children\",\"size\",\"element\",\"src\",\"icon\"]);return e===void 0&&console.error(\"[Paste Avatar]: name prop is required\"),i&&p?(console.error(\"[Paste Avatar]: do not set both src and icon on Avatar\"),null):r.createElement(c,m(I({},E(P)),{as:\"div\",element:o,backgroundColor:\"colorBackgroundUser\",borderRadius:\"borderRadiusCircle\",overflow:\"hidden\",ref:T,size:n,color:\"colorText\"}),i?r.createElement(w,{name:e,size:n,src:i}):r.createElement(w,{name:e,size:n,icon:p}))});x.displayName=\"Avatar\";x.propTypes={size:F,name:a.string.isRequired,element:a.string,src:e=>(e.src&&e.icon&&new Error(\"[Paste Avatar]: do not set both src and icon on Avatar\"),typeof e.src!=\"string\"&&new Error(\"[Paste Avatar]: src prop must be a string\"),null),icon:e=>(e.src&&e.icon&&new Error(\"[Paste Avatar]: do not set both src and icon on Avatar\"),typeof e.icon!=\"function\"&&new Error(\"[Paste Avatar]: icon prop must be a Paste Icon\"),null)};export{x as Avatar};\n"]},"metadata":{},"sourceType":"module"}