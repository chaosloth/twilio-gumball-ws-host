{"ast":null,"code":"var _jsxFileName = \"/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/pages/Dispense.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card } from \"@twilio-paste/core/card\";\nimport { Heading } from \"@twilio-paste/core/heading\";\nimport { Text } from \"@twilio-paste/core/text\";\nimport { Flex, Paragraph, Stack } from \"@twilio-paste/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\nexport const Dispense = () => {\n  _s();\n\n  const user = React.useContext(UserContext);\n  const navigate = useNavigate();\n  const [counter, setCounter] = React.useState(30);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => {\n      setCounter(counter - 1);\n      if (counter === 1) navigate(\"/\");\n    }, 1000);\n  }, [counter, navigate]);\n  const styles = {\n    animation: \"flip 0.6s infinite linear\"\n  };\n  return /*#__PURE__*/React.createElement(Flex, {\n    padding: \"space200\",\n    hAlignContent: \"center\",\n    height: \"100vh\",\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    padding: \"space70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"div\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    as: \"h1\",\n    variant: \"heading10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"It's really you!\"), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, user.name, \", Thanks for participating in RED 2022.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), \"We can't wait to see \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }\n  }, \"what you build!\")), /*#__PURE__*/React.createElement(Flex, {\n    hAlignContent: \"center\",\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Unicorn\",\n    width: \"400px\",\n    style: styles,\n    src: \"uni.jpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Flex, {\n    vAlignContent: \"center\",\n    hAlignContent: \"center\",\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    orientation: \"horizontal\",\n    spacing: \"space60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Game will reset in \", counter)))));\n};\n\n_s(Dispense, \"wyDE62FLS7yze3Piam7fXXn0EKE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dispense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dispense\");","map":{"version":3,"sources":["/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/pages/Dispense.tsx"],"names":["React","Card","Heading","Text","Flex","Paragraph","Stack","useNavigate","UserContext","Dispense","user","useContext","navigate","counter","setCounter","useState","useEffect","setTimeout","styles","animation","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card } from \"@twilio-paste/core/card\";\nimport { Heading } from \"@twilio-paste/core/heading\";\nimport { Text } from \"@twilio-paste/core/text\";\nimport { Flex, Paragraph, Stack } from \"@twilio-paste/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\n\nexport const Dispense: React.FC = () => {\n  const user = React.useContext(UserContext);\n\n  const navigate = useNavigate();\n\n  const [counter, setCounter] = React.useState(30);\n  React.useEffect(() => {\n    counter > 0 &&\n      setTimeout(() => {\n        setCounter(counter - 1);\n        if (counter === 1) navigate(\"/\");\n      }, 1000);\n  }, [counter, navigate]);\n\n  const styles = {\n    animation: \"flip 0.6s infinite linear\",\n  };\n\n  return (\n    <Flex padding=\"space200\" hAlignContent=\"center\" height=\"100vh\" grow>\n      <Card padding=\"space70\">\n        <Text as=\"div\" textAlign=\"center\">\n          <Heading as=\"h1\" variant=\"heading10\">\n            It's really you!\n          </Heading>\n          <Paragraph>\n            {user.name}, Thanks for participating in RED 2022.\n            <br />\n            We can't wait to see <strong>what you build!</strong>\n          </Paragraph>\n          <Flex hAlignContent=\"center\" vertical>\n            <Paragraph>\n              <img alt=\"Unicorn\" width=\"400px\" style={styles} src=\"uni.jpeg\" />\n            </Paragraph>\n          </Flex>\n        </Text>\n        <Flex vAlignContent=\"center\" hAlignContent=\"center\" grow>\n          <Stack orientation=\"horizontal\" spacing=\"space60\">\n            <Text as=\"span\">Game will reset in {counter}</Text>\n          </Stack>\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}