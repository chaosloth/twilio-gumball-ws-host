{"ast":null,"code":"var _jsxFileName = \"/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/pages/Validating.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Heading } from \"@twilio-paste/core/heading\";\nimport { Text } from \"@twilio-paste/core/text\";\nimport { Flex, Paragraph, Stack } from \"@twilio-paste/core\";\nimport { Spinner } from \"@twilio-paste/spinner\";\nimport { Button } from \"@twilio-paste/core/button\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\nexport const Validating = () => {\n  _s();\n\n  const user = React.useContext(UserContext);\n  const navigate = useNavigate();\n  const [counter, setCounter] = React.useState(60);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n  return /*#__PURE__*/React.createElement(Flex, {\n    padding: \"space200\",\n    hAlignContent: \"center\",\n    height: \"100vh\",\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"div\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"candy\",\n    src: \"candy.png\",\n    className: \"candy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Heading, {\n    as: \"h2\",\n    variant: \"heading10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Hang tight, \", user.name, \"!\"), /*#__PURE__*/React.createElement(Heading, {\n    as: \"h3\",\n    variant: \"heading30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Thanks! We're securely verifying your input now\"), /*#__PURE__*/React.createElement(Flex, {\n    hAlignContent: \"center\",\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"sizeIcon110\",\n    color: \"colorTextSuccess\",\n    decorative: false,\n    title: \"Loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Flex, {\n    vAlignContent: \"center\",\n    hAlignContent: \"center\",\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    orientation: \"horizontal\",\n    spacing: \"space60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"destructive_secondary\",\n    disabled: counter > 0,\n    onClick: () => navigate(\"/ocr\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Try verfification code again\", counter > 0 && \" in \" + counter))));\n};\n\n_s(Validating, \"5EEGBe8C5iglmTgn6zesPuBmrZE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Validating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validating\");","map":{"version":3,"sources":["/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/pages/Validating.tsx"],"names":["React","Heading","Text","Flex","Paragraph","Stack","Spinner","Button","useNavigate","UserContext","Validating","user","useContext","navigate","counter","setCounter","useState","useEffect","setTimeout","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card } from \"@twilio-paste/core/card\";\nimport { Heading } from \"@twilio-paste/core/heading\";\nimport { Text } from \"@twilio-paste/core/text\";\nimport { Flex, Paragraph, Stack } from \"@twilio-paste/core\";\nimport { Spinner } from \"@twilio-paste/spinner\";\nimport { Button } from \"@twilio-paste/core/button\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\n\nexport const Validating: React.FC = () => {\n  const user = React.useContext(UserContext);\n\n  const navigate = useNavigate();\n\n  const [counter, setCounter] = React.useState(60);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n  return (\n    <Flex padding=\"space200\" hAlignContent=\"center\" height=\"100vh\" grow>\n        <Text as=\"div\" textAlign=\"center\">\n        <img alt=\"candy\" src=\"candy.png\" className=\"candy\"/>\n          <Heading as=\"h2\" variant=\"heading10\">\n            Hang tight, {user.name}!\n          </Heading>\n          <Heading as=\"h3\" variant=\"heading30\">Thanks! We're securely verifying your input now</Heading>\n          <Flex hAlignContent=\"center\" vertical>\n            <Paragraph>\n              <Spinner\n                size=\"sizeIcon110\"\n                color=\"colorTextSuccess\"\n                decorative={false}\n                title=\"Loading\"\n              />\n            </Paragraph>\n          </Flex>\n        </Text>\n        <Flex vAlignContent=\"center\" hAlignContent=\"center\" grow>\n          <Stack orientation=\"horizontal\" spacing=\"space60\">\n            <Button\n              variant=\"destructive_secondary\"\n              disabled={counter > 0}\n              onClick={() => navigate(\"/ocr\")}\n            >\n              Try verfification code again\n              {counter > 0 && \" in \" + counter}\n            </Button>\n          </Stack>\n        </Flex>\n      \n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}