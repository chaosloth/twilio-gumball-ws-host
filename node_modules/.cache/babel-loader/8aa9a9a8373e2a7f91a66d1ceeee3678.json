{"ast":null,"code":"var _jsxFileName = \"/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/pages/Incorrect.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Heading } from \"@twilio-paste/core/heading\";\nimport { Text } from \"@twilio-paste/core/text\";\nimport { Flex, Paragraph, Stack } from \"@twilio-paste/core\";\nimport { Spinner } from \"@twilio-paste/spinner\";\nimport { Button } from \"@twilio-paste/core/button\";\nimport { useNavigate } from \"react-router-dom\";\nexport const Incorrect = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [counter, setCounter] = React.useState(15);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n  return /*#__PURE__*/React.createElement(Flex, {\n    padding: \"space200\",\n    hAlignContent: \"center\",\n    height: \"100vh\",\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"div\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"candy\",\n    src: \"candy.png\",\n    className: \"candy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Heading, {\n    as: \"h2\",\n    variant: \"heading10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Hmmm...That's not right\"), /*#__PURE__*/React.createElement(Flex, {\n    hAlignContent: \"center\",\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"sizeIcon110\",\n    color: \"colorTextSuccess\",\n    decorative: false,\n    title: \"Loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Flex, {\n    vAlignContent: \"center\",\n    hAlignContent: \"center\",\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    orientation: [\"vertical\", \"vertical\", \"horizontal\"],\n    spacing: \"space60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"destructive\",\n    fullWidth: true,\n    onClick: () => navigate(\"/ocr\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Re-enter verfification code\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"destructive_secondary\",\n    fullWidth: true,\n    disabled: counter > 0,\n    onClick: () => navigate(\"/channels\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Verify me another way\", counter > 0 && \" in \" + counter)))));\n};\n\n_s(Incorrect, \"DYw8KymdHCU/dNnR+PHsurY72Hs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Incorrect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Incorrect\");","map":{"version":3,"sources":["/Users/charland/Documents/GitHub/twilio-gumball-ws-host/src/pages/Incorrect.tsx"],"names":["React","Heading","Text","Flex","Paragraph","Stack","Spinner","Button","useNavigate","Incorrect","navigate","counter","setCounter","useState","useEffect","setTimeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card } from \"@twilio-paste/core/card\";\nimport { Heading } from \"@twilio-paste/core/heading\";\nimport { Text } from \"@twilio-paste/core/text\";\nimport { Flex, Paragraph, Stack } from \"@twilio-paste/core\";\nimport { Spinner } from \"@twilio-paste/spinner\";\nimport { Button } from \"@twilio-paste/core/button\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Incorrect: React.FC = () => {\n  const navigate = useNavigate();\n\n  const [counter, setCounter] = React.useState(15);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n  return (\n    <Flex padding=\"space200\" hAlignContent=\"center\" height=\"100vh\" grow>\n        <Text as=\"div\" textAlign=\"center\">\n        <img alt=\"candy\" src=\"candy.png\" className=\"candy\"/>\n          <Heading as=\"h2\" variant=\"heading10\">\n            Hmmm...That's not right\n          </Heading>\n\n          <Flex hAlignContent=\"center\" vertical>\n            <Paragraph>\n              <Spinner\n                size=\"sizeIcon110\"\n                color=\"colorTextSuccess\"\n                decorative={false}\n                title=\"Loading\"\n              />\n            </Paragraph>\n          </Flex>\n\n        <Flex vAlignContent=\"center\" hAlignContent=\"center\" grow>\n          <Stack\n            orientation={[\"vertical\", \"vertical\", \"horizontal\"]}\n            spacing=\"space60\"\n          >\n            <Button\n              variant=\"destructive\"\n              fullWidth={true}\n              onClick={() => navigate(\"/ocr\")}\n            >\n              Re-enter verfification code\n            </Button>\n\n            <Button\n              variant=\"destructive_secondary\"\n              fullWidth={true}\n              disabled={counter > 0}\n              onClick={() => navigate(\"/channels\")}\n            >\n              Verify me another way\n              {counter > 0 && \" in \" + counter}\n            </Button>\n          </Stack>\n        </Flex>\n        </Text>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}