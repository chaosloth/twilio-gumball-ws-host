var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  TBody: () => TBody,
  TBodyPropTypes: () => TBodyPropTypes,
  TFoot: () => TFoot,
  TFootPropTypes: () => TFootPropTypes,
  THead: () => THead,
  THeadPropTypes: () => THeadPropTypes,
  Table: () => Table,
  TablePropTypes: () => TablePropTypes,
  Td: () => Td,
  TdPropTypes: () => TdPropTypes,
  Th: () => Th,
  ThPropTypes: () => ThPropTypes,
  Tr: () => Tr,
  TrPropTypes: () => TrPropTypes
});

// src/Table.tsx
var React2 = __toESM(require("react"));
var import_box = require("@twilio-paste/box");

// src/TableContext.tsx
var React = __toESM(require("react"));
var TableContext = React.createContext({});

// src/proptypes.ts
var PropTypes = __toESM(require("prop-types"));
var import_style_props = require("@twilio-paste/style-props");

// src/constants.ts
var TableAlignmentObject = {
  LEFT: "left",
  CENTER: "center",
  RIGHT: "right"
};
var TableLayoutObject = {
  AUTO: "auto",
  FIXED: "fixed"
};
var TableVariantObject = {
  DEFAULT: "default",
  BORDERLESS: "borderless"
};
var TableVerticalAlignmentObject = {
  TOP: "top",
  MIDDLE: "middle",
  BOTTOM: "bottom"
};

// src/proptypes.ts
var TablePropTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string,
  isActionable: PropTypes.bool,
  scrollHorizontally: PropTypes.bool,
  noWrap: PropTypes.bool,
  striped: PropTypes.bool,
  tableLayout: PropTypes.oneOf(Object.values(TableLayoutObject)),
  variant: PropTypes.oneOf(Object.values(TableVariantObject))
};
var THeadPropTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string
};
var TBodyPropTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string
};
var TrPropTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string,
  verticalAlign: PropTypes.oneOf(Object.values(TableVerticalAlignmentObject))
};
var ThPropTypes = {
  children: PropTypes.node,
  element: PropTypes.string,
  textAlign: PropTypes.oneOf(Object.values(TableAlignmentObject)),
  width: import_style_props.isWidthTokenProp
};
var TdPropTypes = {
  children: PropTypes.node,
  element: PropTypes.string,
  textAlign: PropTypes.oneOf(Object.values(TableAlignmentObject))
};
var TFootPropTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string
};

// src/Table.tsx
var Table = React2.forwardRef((_a, ref) => {
  var _b = _a, {
    element = "TABLE",
    id,
    isActionable,
    scrollHorizontally,
    noWrap,
    striped = false,
    tableLayout = "auto",
    variant = "default"
  } = _b, props = __objRest(_b, [
    "element",
    "id",
    "isActionable",
    "scrollHorizontally",
    "noWrap",
    "striped",
    "tableLayout",
    "variant"
  ]);
  const tableContext = {
    striped
  };
  return /* @__PURE__ */ React2.createElement(TableContext.Provider, {
    value: tableContext
  }, /* @__PURE__ */ React2.createElement(import_box.Box, {
    id,
    element: `${element}_WRAPPER`,
    overflowX: scrollHorizontally ? "auto" : null,
    whiteSpace: noWrap ? "nowrap" : null,
    boxShadow: isActionable ? "shadowFocus" : null
  }, /* @__PURE__ */ React2.createElement(import_box.Box, __spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
    ref,
    as: "table",
    borderCollapse: "collapse",
    borderColor: "colorBorderWeaker",
    borderSpacing: "0",
    borderStyle: "solid",
    borderWidth: variant === "borderless" ? "borderWidth0" : "borderWidth10",
    element,
    tableLayout: tableLayout === "fixed" ? "fixed" : "auto",
    width: "100%"
  }))));
});
Table.displayName = "Table";
if (false) {
  Table.propTypes = TablePropTypes;
}

// src/THead.tsx
var React3 = __toESM(require("react"));
var import_box2 = require("@twilio-paste/box");
var THead = React3.forwardRef((_a, ref) => {
  var _b = _a, { element = "THEAD" } = _b, props = __objRest(_b, ["element"]);
  return /* @__PURE__ */ React3.createElement(import_box2.Box, __spreadProps(__spreadValues({}, (0, import_box2.safelySpreadBoxProps)(props)), {
    ref,
    as: "thead",
    backgroundColor: "colorBackground",
    borderBottomColor: "colorBorderWeaker",
    borderBottomStyle: "solid",
    borderBottomWidth: "borderWidth20",
    element
  }));
});
THead.displayName = "THead";
if (false) {
  THead.propTypes = THeadPropTypes;
}

// src/TBody.tsx
var React4 = __toESM(require("react"));
var import_box3 = require("@twilio-paste/box");
var TBody = React4.forwardRef((_a, ref) => {
  var _b = _a, { element = "TBODY" } = _b, props = __objRest(_b, ["element"]);
  return /* @__PURE__ */ React4.createElement(import_box3.Box, __spreadProps(__spreadValues({}, (0, import_box3.safelySpreadBoxProps)(props)), {
    ref,
    as: "tbody",
    backgroundColor: "colorBackgroundBody",
    element
  }));
});
TBody.displayName = "TBody";
if (false) {
  TBody.propTypes = TBodyPropTypes;
}

// src/TFoot.tsx
var React5 = __toESM(require("react"));
var import_box4 = require("@twilio-paste/box");
var TFoot = React5.forwardRef((_a, ref) => {
  var _b = _a, { element = "TFOOT" } = _b, props = __objRest(_b, ["element"]);
  return /* @__PURE__ */ React5.createElement(import_box4.Box, __spreadProps(__spreadValues({}, (0, import_box4.safelySpreadBoxProps)(props)), {
    ref,
    as: "tfoot",
    backgroundColor: "colorBackground",
    borderTopStyle: "solid",
    borderTopWidth: "borderWidth20",
    borderTopColor: "colorBorderWeaker",
    element
  }));
});
TFoot.displayName = "TFoot";
if (false) {
  TFoot.propTypes = TFootPropTypes;
}

// src/Tr.tsx
var React6 = __toESM(require("react"));
var import_box5 = require("@twilio-paste/box");
var Tr = React6.forwardRef((_a, ref) => {
  var _b = _a, { element = "TR", verticalAlign = "middle" } = _b, props = __objRest(_b, ["element", "verticalAlign"]);
  const { striped } = React6.useContext(TableContext);
  return /* @__PURE__ */ React6.createElement(import_box5.Box, __spreadProps(__spreadValues(__spreadValues({}, striped), (0, import_box5.safelySpreadBoxProps)(props)), {
    ref,
    as: "tr",
    borderStyle: "solid",
    borderColor: "colorBorderWeaker",
    borderWidth: "borderWidth0",
    borderBottomWidth: "borderWidth10",
    element,
    verticalAlign,
    _even: { backgroundColor: striped ? "colorBackgroundRowStriped" : "transparent" },
    _last: { borderWidth: "borderWidth0" }
  }));
});
Tr.displayName = "Tr";
if (false) {
  Tr.propTypes = TrPropTypes;
}

// src/Td.tsx
var React7 = __toESM(require("react"));
var import_box6 = require("@twilio-paste/box");
var Td = React7.forwardRef((_a, ref) => {
  var _b = _a, { element = "TD", textAlign = "left" } = _b, props = __objRest(_b, ["element", "textAlign"]);
  return /* @__PURE__ */ React7.createElement(import_box6.Box, __spreadProps(__spreadValues({}, (0, import_box6.safelySpreadBoxProps)(props)), {
    ref,
    as: "td",
    element,
    fontSize: "fontSize30",
    lineHeight: "lineHeight30",
    paddingBottom: "space40",
    paddingLeft: "space50",
    paddingRight: "space50",
    paddingTop: "space40",
    position: "relative",
    textAlign,
    verticalAlign: "inherit",
    wordWrap: "break-word"
  }));
});
Td.displayName = "Td";
if (false) {
  Td.propTypes = TdPropTypes;
}

// src/Th.tsx
var React8 = __toESM(require("react"));
var import_box7 = require("@twilio-paste/box");
var Th = React8.forwardRef((_a, ref) => {
  var _b = _a, { element = "TH", textAlign = "left", width } = _b, props = __objRest(_b, ["element", "textAlign", "width"]);
  return /* @__PURE__ */ React8.createElement(import_box7.Box, __spreadProps(__spreadValues({}, (0, import_box7.safelySpreadBoxProps)(props)), {
    ref,
    as: "th",
    element,
    fontSize: "fontSize30",
    lineHeight: "lineHeight30",
    fontWeight: "fontWeightSemibold",
    paddingBottom: "space40",
    paddingLeft: "space50",
    paddingRight: "space50",
    paddingTop: "space40",
    position: "relative",
    textAlign,
    verticalAlign: "inherit",
    width,
    wordWrap: "break-word"
  }));
});
Th.displayName = "Th";
if (false) {
  Th.propTypes = ThPropTypes;
}
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  TBody,
  TBodyPropTypes,
  TFoot,
  TFootPropTypes,
  THead,
  THeadPropTypes,
  Table,
  TablePropTypes,
  Td,
  TdPropTypes,
  Th,
  ThPropTypes,
  Tr,
  TrPropTypes
});
