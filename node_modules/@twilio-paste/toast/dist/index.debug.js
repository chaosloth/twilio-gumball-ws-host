var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  AnimatedToast: () => AnimatedToast,
  Toast: () => Toast,
  ToastContainer: () => ToastContainer,
  Toaster: () => Toaster,
  useToaster: () => useToaster
});

// src/Toast.tsx
var React5 = __toESM(require("react"));
var import_button = require("@twilio-paste/button");
var import_CloseIcon = require("@twilio-paste/icons/cjs/CloseIcon");
var import_ErrorIcon = require("@twilio-paste/icons/cjs/ErrorIcon");
var import_NeutralIcon = require("@twilio-paste/icons/cjs/NeutralIcon");
var import_SuccessIcon = require("@twilio-paste/icons/cjs/SuccessIcon");
var import_WarningIcon = require("@twilio-paste/icons/cjs/WarningIcon");
var import_media_object = require("@twilio-paste/media-object");

// ../screen-reader-only/dist/index.es.js
var t = __toESM(require("react"));
var f = __toESM(require("prop-types"));
var import_box = require("@twilio-paste/box");
var x = Object.defineProperty;
var y = Object.defineProperties;
var R = Object.getOwnPropertyDescriptors;
var p = Object.getOwnPropertySymbols;
var i = Object.prototype.hasOwnProperty;
var s = Object.prototype.propertyIsEnumerable;
var d = (e, r, o) => r in e ? x(e, r, { enumerable: true, configurable: true, writable: true, value: o }) : e[r] = o;
var c = (e, r) => {
  for (var o in r || (r = {}))
    i.call(r, o) && d(e, o, r[o]);
  if (p)
    for (var o of p(r))
      s.call(r, o) && d(e, o, r[o]);
  return e;
};
var l = (e, r) => y(e, R(r));
var m = (e, r) => {
  var o = {};
  for (var n in e)
    i.call(e, n) && r.indexOf(n) < 0 && (o[n] = e[n]);
  if (e != null && p)
    for (var n of p(e))
      r.indexOf(n) < 0 && s.call(e, n) && (o[n] = e[n]);
  return o;
};
var h = t.forwardRef((N, n) => {
  var a = N, { as: e = "span", children: r } = a, o = m(a, ["as", "children"]);
  return t.createElement(import_box.Box, l(c({}, o), { as: e, border: "none", clip: "rect(0 0 0 0)", height: "1px", margin: "spaceNegative10", overflow: "hidden", padding: "space0", position: "absolute", ref: n, textTransform: "none", whiteSpace: "nowrap", width: "1px" }), r);
});
h.displayName = "ScreenReaderOnly";

// src/ErrorToast.tsx
var React = __toESM(require("react"));
var import_box2 = require("@twilio-paste/box");

// src/propTypes.ts
var PropTypes = __toESM(require("prop-types"));

// src/constants.ts
var ToastVariantObject = {
  ERROR: "error",
  NEUTRAL: "neutral",
  SUCCESS: "success",
  WARNING: "warning"
};

// src/propTypes.ts
var ToastPropTypes = {
  children: PropTypes.node.isRequired,
  onDismiss: PropTypes.func,
  variant: PropTypes.oneOf(["error", "neutral", "success", "warning"]),
  i18nDismissLabel: PropTypes.string,
  i18nErrorLabel: PropTypes.string,
  i18nNeutralLabel: PropTypes.string,
  i18nSuccessLabel: PropTypes.string,
  i18nWarningLabel: PropTypes.string
};
var ToastPortalPropTypes = {
  children: PropTypes.node.isRequired,
  __console_patch: PropTypes.bool
};
var ToastContainerPropTypes = {
  children: PropTypes.node.isRequired,
  __console_patch: PropTypes.bool
};
var ToasterPropTypes = {
  toasts: PropTypes.arrayOf(PropTypes.shape({
    id: PropTypes.string.isRequired,
    message: PropTypes.node.isRequired,
    setFocus: PropTypes.bool,
    variant: PropTypes.oneOf(Object.values(ToastVariantObject)).isRequired
  })).isRequired,
  pop: PropTypes.func.isRequired,
  __console_patch: PropTypes.bool
};

// src/ErrorToast.tsx
var ErrorToast = React.forwardRef((_a, ref) => {
  var _b = _a, { element = "TOAST", variant } = _b, props = __objRest(_b, ["element", "variant"]);
  return /* @__PURE__ */ React.createElement(import_box2.Box, __spreadProps(__spreadValues({}, (0, import_box2.safelySpreadBoxProps)(props)), {
    ref,
    backgroundColor: "colorBackgroundBody",
    borderColor: "colorBorderWeaker",
    borderRadius: "borderRadius20",
    borderStyle: "solid",
    borderWidth: "borderWidth10",
    borderLeftWidth: "borderWidth30",
    borderLeftColor: "colorBorderErrorWeak",
    boxShadow: "shadowHigh",
    element,
    padding: "space60",
    variant,
    width: "size40"
  }), props.children);
});
ErrorToast.displayName = "ErrorToast";
ErrorToast.propTypes = ToastPropTypes;

// src/NeutralToast.tsx
var React2 = __toESM(require("react"));
var import_box3 = require("@twilio-paste/box");
var NeutralToast = React2.forwardRef((_a, ref) => {
  var _b = _a, { element = "TOAST", variant } = _b, props = __objRest(_b, ["element", "variant"]);
  return /* @__PURE__ */ React2.createElement(import_box3.Box, __spreadProps(__spreadValues({}, (0, import_box3.safelySpreadBoxProps)(props)), {
    ref,
    backgroundColor: "colorBackgroundBody",
    borderColor: "colorBorderWeaker",
    borderRadius: "borderRadius20",
    borderStyle: "solid",
    borderWidth: "borderWidth10",
    borderLeftWidth: "borderWidth30",
    borderLeftColor: "colorBorderNeutralWeak",
    boxShadow: "shadowHigh",
    element,
    padding: "space60",
    variant,
    width: "size40"
  }), props.children);
});
NeutralToast.displayName = "NeutralToast";
NeutralToast.propTypes = ToastPropTypes;

// src/SuccessToast.tsx
var React3 = __toESM(require("react"));
var import_box4 = require("@twilio-paste/box");
var SuccessToast = React3.forwardRef((_a, ref) => {
  var _b = _a, { element = "TOAST", variant } = _b, props = __objRest(_b, ["element", "variant"]);
  return /* @__PURE__ */ React3.createElement(import_box4.Box, __spreadProps(__spreadValues({}, (0, import_box4.safelySpreadBoxProps)(props)), {
    ref,
    backgroundColor: "colorBackgroundBody",
    borderColor: "colorBorderWeaker",
    borderRadius: "borderRadius20",
    borderStyle: "solid",
    borderWidth: "borderWidth10",
    borderLeftWidth: "borderWidth30",
    borderLeftColor: "colorBorderSuccessWeak",
    boxShadow: "shadowHigh",
    element,
    padding: "space60",
    variant,
    width: "size40"
  }), props.children);
});
SuccessToast.displayName = "SuccessToast";
SuccessToast.propTypes = ToastPropTypes;

// src/WarningToast.tsx
var React4 = __toESM(require("react"));
var import_box5 = require("@twilio-paste/box");
var WarningToast = React4.forwardRef((_a, ref) => {
  var _b = _a, { element = "TOAST", variant } = _b, props = __objRest(_b, ["element", "variant"]);
  return /* @__PURE__ */ React4.createElement(import_box5.Box, __spreadProps(__spreadValues({}, (0, import_box5.safelySpreadBoxProps)(props)), {
    ref,
    backgroundColor: "colorBackgroundBody",
    borderColor: "colorBorderWeaker",
    borderRadius: "borderRadius20",
    borderStyle: "solid",
    borderWidth: "borderWidth10",
    borderLeftWidth: "borderWidth30",
    borderLeftColor: "colorBorderWarningWeak",
    boxShadow: "shadowHigh",
    element,
    padding: "space60",
    variant,
    width: "size40"
  }), props.children);
});
WarningToast.displayName = "WarningToast";
WarningToast.propTypes = ToastPropTypes;

// src/Toast.tsx
var ToastComponentVariants = {
  error: ErrorToast,
  neutral: NeutralToast,
  success: SuccessToast,
  warning: WarningToast
};
var renderToastIcon = (variant, title, element) => {
  switch (variant) {
    case ToastVariantObject.ERROR:
      return /* @__PURE__ */ React5.createElement(import_ErrorIcon.ErrorIcon, {
        color: "colorTextIconError",
        decorative: false,
        title,
        element: `${element}_ICON`,
        size: "sizeIcon20"
      });
    case ToastVariantObject.SUCCESS:
      return /* @__PURE__ */ React5.createElement(import_SuccessIcon.SuccessIcon, {
        color: "colorTextIconSuccess",
        decorative: false,
        title,
        element: `${element}_ICON`,
        size: "sizeIcon20"
      });
    case ToastVariantObject.WARNING:
      return /* @__PURE__ */ React5.createElement(import_WarningIcon.WarningIcon, {
        color: "colorTextIconWarning",
        decorative: false,
        title,
        element: `${element}_ICON`,
        size: "sizeIcon20"
      });
    case ToastVariantObject.NEUTRAL:
    default:
      return /* @__PURE__ */ React5.createElement(import_NeutralIcon.NeutralIcon, {
        color: "colorTextIconNeutral",
        decorative: false,
        title,
        element: `${element}_ICON`,
        size: "sizeIcon20"
      });
  }
};
var Toast = React5.forwardRef((_a, ref) => {
  var _b = _a, {
    children,
    onDismiss,
    variant = "neutral",
    element = "TOAST",
    setFocus,
    i18nDismissLabel = "Dismiss toast",
    i18nErrorLabel = "(error)",
    i18nNeutralLabel = "(information)",
    i18nSuccessLabel = "(success)",
    i18nWarningLabel = "(warning)"
  } = _b, props = __objRest(_b, [
    "children",
    "onDismiss",
    "variant",
    "element",
    "setFocus",
    "i18nDismissLabel",
    "i18nErrorLabel",
    "i18nNeutralLabel",
    "i18nSuccessLabel",
    "i18nWarningLabel"
  ]);
  const ToastComponent = ToastComponentVariants[variant];
  const buttonRef = React5.useRef(null);
  React5.useEffect(() => {
    if (setFocus && buttonRef.current) {
      buttonRef.current.focus({ preventScroll: true });
    }
  }, [setFocus]);
  const i18nVariants = {
    error: i18nErrorLabel,
    neutral: i18nNeutralLabel,
    success: i18nSuccessLabel,
    warning: i18nWarningLabel
  };
  return /* @__PURE__ */ React5.createElement(ToastComponent, __spreadValues({
    role: "status",
    variant,
    element,
    ref
  }, props), /* @__PURE__ */ React5.createElement(import_media_object.MediaObject, {
    as: "div"
  }, /* @__PURE__ */ React5.createElement(import_media_object.MediaFigure, {
    as: "div",
    spacing: "space60"
  }, renderToastIcon(variant, i18nVariants[variant], element)), /* @__PURE__ */ React5.createElement(import_media_object.MediaBody, {
    as: "div"
  }, children), onDismiss && typeof onDismiss === "function" && /* @__PURE__ */ React5.createElement(import_media_object.MediaFigure, {
    align: "end",
    spacing: "space40"
  }, /* @__PURE__ */ React5.createElement(import_button.Button, {
    onClick: onDismiss,
    variant: "secondary_icon",
    ref: buttonRef,
    size: "reset",
    element: `${element}_CLOSE_BUTTON`
  }, /* @__PURE__ */ React5.createElement(import_CloseIcon.CloseIcon, {
    decorative: true,
    size: "sizeIcon20",
    element: `${element}_CLOSE_ICON`
  }), /* @__PURE__ */ React5.createElement(h, null, i18nDismissLabel)))));
});
Toast.displayName = "Toast";
Toast.propTypes = ToastPropTypes;

// src/ToastContainer.tsx
var React7 = __toESM(require("react"));
var import_stack = require("@twilio-paste/stack");

// src/ToastPortal.tsx
var React6 = __toESM(require("react"));
var import_theme = require("@twilio-paste/theme");
var import_reakit_library = require("@twilio-paste/reakit-library");
var import_box6 = require("@twilio-paste/box");
var ToastPortal = React6.forwardRef((_a, ref) => {
  var _b = _a, { children, __console_patch } = _b, props = __objRest(_b, ["children", "__console_patch"]);
  return /* @__PURE__ */ React6.createElement(import_reakit_library.Portal, null, /* @__PURE__ */ React6.createElement(import_theme.StyledBase, null, /* @__PURE__ */ React6.createElement(import_box6.Box, __spreadProps(__spreadValues({}, (0, import_box6.safelySpreadBoxProps)(props)), {
    position: "fixed",
    right: "space40",
    top: "space90",
    zIndex: "zIndex90",
    ref,
    style: __console_patch ? { zIndex: 1999 } : void 0
  }), children)));
});
ToastPortal.displayName = "ToastPortal";
if (false) {
  ToastPortal.propTypes = ToastPortalPropTypes;
}

// src/ToastContainer.tsx
var ToastContainer = React7.forwardRef((_a, ref) => {
  var _b = _a, { children } = _b, props = __objRest(_b, ["children"]);
  return /* @__PURE__ */ React7.createElement(ToastPortal, __spreadValues({}, props), /* @__PURE__ */ React7.createElement(import_stack.Stack, {
    orientation: "vertical",
    spacing: "space40",
    ref
  }, children));
});
ToastContainer.displayName = "ToastContainer";
ToastContainer.propTypes = ToastContainerPropTypes;

// src/Toaster.tsx
var React8 = __toESM(require("react"));
var import_animation_library = require("@twilio-paste/animation-library");
var import_theme2 = require("@twilio-paste/theme");
var import_box7 = require("@twilio-paste/box");
var AnimatedToast = (0, import_animation_library.animated)(import_box7.Box);
var Toaster = (_a) => {
  var _b = _a, { toasts, pop } = _b, props = __objRest(_b, ["toasts", "pop"]);
  const prefersReducedMotion = (0, import_animation_library.useReducedMotion)();
  const [refMap] = React8.useState(() => /* @__PURE__ */ new WeakMap());
  const [returnTarget, setReturnTarget] = React8.useState({ trigger: null });
  const theme = (0, import_theme2.useTheme)();
  const transitions = (0, import_animation_library.useTransition)(toasts, {
    from: {
      marginBottom: "0rem",
      opacity: 0,
      transform: "translateX(100%) scale(1)",
      height: prefersReducedMotion ? "auto" : 0
    },
    enter: prefersReducedMotion ? { marginBottom: theme.space.space40, opacity: 1, transform: "translateX(0px) scale(1)" } : (item) => async (next) => {
      await next({
        marginBottom: theme.space.space40,
        opacity: 1,
        transform: "translateX(0px) scale(1)",
        height: refMap.get(item).offsetHeight
      });
    },
    leave: {
      marginBottom: "0rem",
      opacity: 0,
      transform: "translateX(0px) scale(0.8)",
      height: prefersReducedMotion ? "auto" : 0
    },
    config: {
      mass: 1,
      tension: 150,
      friction: 20
    }
  });
  const clearReturnTarget = React8.useCallback(() => {
    setReturnTarget({ trigger: null });
  }, [returnTarget]);
  React8.useEffect(() => {
    if (returnTarget.trigger != null && toasts.length === 0) {
      returnTarget.trigger.focus();
      clearReturnTarget();
    }
  }, [toasts]);
  return /* @__PURE__ */ React8.createElement(ToastPortal, __spreadValues({}, props), transitions((styles, item, state, index) => {
    return /* @__PURE__ */ React8.createElement(AnimatedToast, {
      as: "div",
      key: state.key,
      style: styles
    }, /* @__PURE__ */ React8.createElement(Toast, __spreadProps(__spreadValues({
      key: item.id
    }, item), {
      onDismiss: () => {
        if (item.onDismiss != null) {
          item.onDismiss();
        }
        pop(item.id);
      },
      ref: (ref) => {
        if (ref != null) {
          refMap.set(item, ref);
        }
      },
      setFocus: index === 0,
      onFocus: (e) => {
        if (e.relatedTarget && !returnTarget.trigger) {
          setReturnTarget({ trigger: e.relatedTarget });
        }
      }
    }), item.message));
  }));
};
Toaster.displayName = "Toaster";
if (false) {
  Toaster.propTypes = ToasterPropTypes;
}

// src/useToaster.ts
var React9 = __toESM(require("react"));
var import_uid_library = require("@twilio-paste/uid-library");
var useToaster = () => {
  const isMounted = React9.useRef(null);
  const [toasts, setToasts] = React9.useState([]);
  React9.useEffect(() => {
    isMounted.current = true;
    return () => {
      isMounted.current = false;
      toasts.forEach((toast) => {
        if (toast.timeOutId) {
          window.clearTimeout(toast.timeOutId);
        }
      });
    };
  }, []);
  const pop = (id) => {
    if (!isMounted.current) {
      return;
    }
    setToasts((currentToasts) => currentToasts.filter((toast) => {
      if (toast.id === id) {
        if (toast.timeOutId) {
          window.clearTimeout(toast.timeOutId);
        }
        if (toast.onDismiss) {
          toast.onDismiss();
        }
      }
      return toast.id !== id;
    }));
  };
  const push = (newToast) => {
    if (!isMounted.current) {
      return;
    }
    const generatedID = (0, import_uid_library.uid)(newToast);
    let timeOutId;
    if (newToast.dismissAfter != null && Number.isInteger(newToast.dismissAfter)) {
      timeOutId = window.setTimeout(pop, newToast.dismissAfter, newToast.id || generatedID);
    }
    const existingToasts = toasts.map((toast) => {
      const tmpToast = toast;
      tmpToast.setFocus = false;
      return tmpToast;
    });
    setToasts([__spreadValues({ id: generatedID, timeOutId, setFocus: true }, newToast), ...existingToasts]);
  };
  return { toasts, push, pop };
};
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AnimatedToast,
  Toast,
  ToastContainer,
  Toaster,
  useToaster
});
