var $=Object.defineProperty,K=Object.defineProperties;var j=Object.getOwnPropertyDescriptors;var y=Object.getOwnPropertySymbols;var N=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable;var S=(o,e,r)=>e in o?$(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r,h=(o,e)=>{for(var r in e||(e={}))N.call(e,r)&&S(o,r,e[r]);if(y)for(var r of y(e))_.call(e,r)&&S(o,r,e[r]);return o},u=(o,e)=>K(o,j(e));var x=(o,e)=>{var r={};for(var a in o)N.call(o,a)&&e.indexOf(a)<0&&(r[a]=o[a]);if(o!=null&&y)for(var a of y(o))e.indexOf(a)<0&&_.call(o,a)&&(r[a]=o[a]);return r};import*as n from"react";import*as t from"prop-types";import{useUID as U}from"@twilio-paste/uid-library";import{Box as w,safelySpreadBoxProps as J}from"@twilio-paste/box";import{CheckboxCheckIcon as Q}from"@twilio-paste/icons/esm/CheckboxCheckIcon";import{MinusIcon as Y}from"@twilio-paste/icons/esm/MinusIcon";import{BaseRadioCheckboxControl as Z,BaseRadioCheckboxLabel as ee,BaseRadioCheckboxLabelText as oe,BaseRadioCheckboxHelpText as re}from"@twilio-paste/base-radio-checkbox";import{MediaObject as ne,MediaFigure as te,MediaBody as ae}from"@twilio-paste/media-object";import{RequiredDot as ie}from"@twilio-paste/label";import*as G from"react";var P=G.createContext({disabled:!1,name:void 0,hasError:void 0,onChange:()=>{}});var q=n.forwardRef((o,e)=>n.createElement(w,u(h({},o),{ref:e,as:"input",type:"checkbox",size:"size0",border:"none",overflow:"hidden",padding:"space0",margin:"space0",whiteSpace:"nowrap",textTransform:"none",position:"absolute",clip:"rect(0 0 0 0)"})));q.displayName="HiddenCheckbox";var le=({checked:o,element:e,indeterminate:r})=>r?n.createElement(Y,{element:e,decorative:!0,color:"inherit",size:"sizeIcon10"}):n.createElement(Q,{element:e,display:o?"block":"none",decorative:!0,color:"inherit",size:"sizeIcon10"}),E=n.forwardRef((z,I)=>{var k=z,{checked:o,element:e="CHECKBOX",children:r,helpText:a,id:b,indeterminate:c,isSelectAll:l,isSelectAllChild:f,required:R}=k,s=x(k,["checked","element","children","helpText","id","indeterminate","isSelectAll","isSelectAllChild","required"]);let T=U(),C=n.useContext(P),d=s.disabled!=null?s.disabled:C.disabled,g=s.name!=null?s.name:C.name,X=s.hasError!=null?s.hasError:C.hasError,[F,V]=n.useState(!!s.defaultChecked),M=o!==void 0,O=M?o:F,W=H=>{M?s.onChange?s.onChange(H):C.onChange(H):V(H.target.checked)},L=null,v=null;return l&&(L="space20",v="colorBackground",(O||c)&&!d&&(v="colorBackgroundPrimaryWeakest")),f&&(L="space30"),n.createElement(w,{element:e,backgroundColor:v,borderRadius:l?"borderRadius10":null,display:"inline-flex",position:"relative",flexDirection:"column",padding:l?"space30":null,paddingBottom:l?"space20":null,paddingLeft:L,paddingRight:f?"space30":null,paddingTop:l?"space20":null},n.createElement(q,u(h({},J(s)),{checked:o,disabled:d,name:g,onChange:W,"aria-describedby":T,"aria-checked":c?"mixed":o,"aria-invalid":X,id:b,required:R,ref:I})),n.createElement(ee,{disabled:d,htmlFor:b},n.createElement(Z,{alignItems:"center",borderRadius:"borderRadius10",element:`${e}_CONTROL`,disabled:d,position:"relative",type:"checkbox"},n.createElement(le,{element:`${e}_ICON`,checked:O,disabled:d,indeterminate:c})),n.createElement(oe,{element:`${e}_LABEL_TEXT`,fontWeight:l?null:"fontWeightMedium"},n.createElement(ne,{verticalAlign:"top"},R&&n.createElement(te,{spacing:"space20"},n.createElement(ie,null)),n.createElement(ae,null,r)))),a&&n.createElement(re,{element:`${e}_HELP_TEXT_WRAPPER`,helpTextId:T},a))});E.displayName="Checkbox";E.propTypes={children:t.node.isRequired,disabled:t.bool,name:t.string,onChange:t.func,hasError:t.bool,helpText:t.oneOfType([t.string,t.node]),id:t.string,indeterminate:t.bool,isSelectAll:t.bool,isSelectAllChild:t.bool,element:t.string,defaultChecked:t.bool};import*as i from"react";import*as B from"prop-types";import{InlineControlGroup as se}from"@twilio-paste/inline-control-group";var de=i.forwardRef((z,I)=>{var k=z,{children:o,element:e="CHECKBOX_GROUP",disabled:r=!1,errorText:a,isSelectAll:b=!1,name:c,onChange:l,orientation:f="vertical",i18nRequiredLabel:R="(required)"}=k,s=x(k,["children","element","disabled","errorText","isSelectAll","name","onChange","orientation","i18nRequiredLabel"]);let T=i.useCallback(d=>{l!=null&&l(d.target.checked)},[l]),C=i.useMemo(()=>({disabled:r,name:c,onChange:T,hasError:a?!0:void 0}),[r,c,T]);return i.createElement(P.Provider,{value:C},i.createElement(se,u(h({},s),{element:e,disabled:r,errorText:a,name:c,orientation:f,ref:I,i18nRequiredLabel:R}),i.Children.map(o,(d,g)=>i.isValidElement(d)?i.cloneElement(d,{isSelectAll:b&&g===0,isSelectAllChild:b&&f==="vertical"&&g!==0}):d)))});de.displayName="CheckboxGroup";import*as p from"react";import*as m from"prop-types";import{Box as A}from"@twilio-paste/box";import{HelpText as pe}from"@twilio-paste/help-text";var D=p.forwardRef((c,b)=>{var l=c,{children:o,element:e="CHECKBOX_DISCLAIMER",errorText:r}=l,a=x(l,["children","element","errorText"]);return p.createElement(p.Fragment,null,p.createElement(A,{element:e,backgroundColor:"colorBackground",borderRadius:"borderRadius20",padding:"space50"},p.createElement(E,u(h({},a),{hasError:r!=null,ref:b}),o)),r&&p.createElement(A,{marginTop:"space30",element:`${e}_ERROR_TEXT_WRAPPER`,marginLeft:"space50"},p.createElement(pe,{variant:"error"},r)))});D.displayName="CheckboxDisclaimer";D.propTypes={children:m.node.isRequired,errorText:m.oneOfType([m.string,m.node]),element:m.string};export{E as Checkbox,D as CheckboxDisclaimer,de as CheckboxGroup};
