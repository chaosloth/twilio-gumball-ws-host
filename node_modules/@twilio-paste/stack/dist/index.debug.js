var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Stack: () => Stack,
  getStackChildMargins: () => getStackChildMargins,
  getStackDisplay: () => getStackDisplay,
  getStackStyles: () => getStackStyles
});
var React = __toESM(require("react"));
var PropTypes = __toESM(require("prop-types"));
var import_uid_library = require("@twilio-paste/uid-library");
var import_style_props = require("@twilio-paste/style-props");
var import_box = require("@twilio-paste/box");
var getStackDisplay = (orientation) => {
  if (Array.isArray(orientation)) {
    return orientation.map((value) => {
      if (value === "horizontal") {
        return "flex";
      }
      return "block";
    });
  }
  if (orientation === "horizontal") {
    return "flex";
  }
  return "block";
};
var getStackStyles = (orientation) => {
  const styles = {
    display: getStackDisplay(orientation),
    alignItems: "center",
    flexWrap: "wrap"
  };
  return styles;
};
var getStackChildMargins = (orientation, spacing) => {
  let styles = {};
  if (Array.isArray(orientation)) {
    const marginRight = [];
    const marginBottom = [];
    orientation.forEach((value, i) => {
      marginRight[i] = value === "horizontal" ? spacing : "space0";
      marginBottom[i] = value === "horizontal" ? "space0" : spacing;
    });
    styles = {
      marginRight,
      marginBottom
    };
  }
  if (orientation === "horizontal") {
    styles = { marginRight: spacing };
  }
  if (orientation === "vertical") {
    styles = { marginBottom: spacing };
  }
  return styles;
};
var Stack = React.forwardRef((_a, ref) => {
  var _b = _a, { children, orientation, spacing, element = "STACK" } = _b, props = __objRest(_b, ["children", "orientation", "spacing", "element"]);
  const [childrenCount, validChildren] = React.useMemo(() => {
    const filteredChildren = React.Children.toArray(children).filter((child) => React.isValidElement(child) || typeof child === "string");
    return [filteredChildren.length, filteredChildren];
  }, [children]);
  const stackStyles = React.useMemo(() => getStackStyles(orientation), [orientation]);
  const childMargins = React.useMemo(() => getStackChildMargins(orientation, spacing), [orientation, spacing]);
  const keySeed = (0, import_uid_library.useUIDSeed)();
  return /* @__PURE__ */ React.createElement(import_box.Box, __spreadProps(__spreadValues(__spreadValues({
    element
  }, (0, import_box.safelySpreadBoxProps)(props)), stackStyles), {
    ref
  }), validChildren.map((child, index) => {
    return /* @__PURE__ */ React.createElement(import_box.Box, __spreadProps(__spreadValues({
      element: `${element}_CHILD`
    }, childrenCount !== index + 1 ? childMargins : null), {
      key: keySeed(`stack-${index}`)
    }), child);
  }));
});
Stack.displayName = "Stack";
Stack.propTypes = {
  orientation: (0, import_style_props.ResponsiveProp)(PropTypes.oneOf(["horizontal", "vertical"])).isRequired,
  spacing: import_style_props.isSpaceTokenProp,
  element: PropTypes.string
};
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Stack,
  getStackChildMargins,
  getStackDisplay,
  getStackStyles
});
