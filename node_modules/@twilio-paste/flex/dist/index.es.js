var le=Object.defineProperty,fe=Object.defineProperties;var ue=Object.getOwnPropertyDescriptors;var f=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,j=Object.prototype.propertyIsEnumerable;var X=(e,r,o)=>r in e?le(e,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[r]=o,a=(e,r)=>{for(var o in r||(r={}))I.call(r,o)&&X(e,o,r[o]);if(f)for(var o of f(r))j.call(r,o)&&X(e,o,r[o]);return e},V=(e,r)=>fe(e,ue(r));var q=(e,r)=>{var o={};for(var n in e)I.call(e,n)&&r.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&f)for(var n of f(e))r.indexOf(n)<0&&j.call(e,n)&&(o[n]=e[n]);return o};import*as l from"react";import*as t from"prop-types";import{Box as ye,safelySpreadBoxProps as me}from"@twilio-paste/box";import{ResponsiveProp as s,isWidthTokenProp as $,isMinWidthTokenProp as xe,isMaxWidthTokenProp as ce,isHeightTokenProp as Pe,isMinHeightTokenProp as ge,isMaxHeightTokenProp as Te,isPaddingTokenProp as i,isMarginTokenProp as p}from"@twilio-paste/style-props";var J=({grow:e})=>Array.isArray(e)?e.map(r=>Number(r)):typeof e=="number"?e:e?1:0,K=({shrink:e,basis:r})=>Array.isArray(e)?e.map(o=>Number(o)):typeof e=="number"?e:typeof e=="boolean"?e?1:0:r&&r!=="auto"?0:1,L=e=>{let r=typeof e=="number"||String(Number.parseInt(e,10))===e?"px":"";return e+r},Q=({basis:e})=>Array.isArray(e)?e.map(r=>L(r)):e?L(e):"auto",U=({vertical:e})=>Array.isArray(e)?e.map(r=>typeof r=="boolean"?r===!0?"column":"row":r):e?"column":"row",Y=({wrap:e})=>Array.isArray(e)?e.map(r=>typeof r=="boolean"?r===!0?"wrap":"nowrap":r):e?"wrap":"nowrap",Z={top:"flex-start",center:"center",bottom:"flex-end",stretch:"stretch"},W=({vAlignContent:e})=>Array.isArray(e)?e.map(r=>Z[r]):e?Z[e]:"flex-start",_={left:"flex-start",center:"center",right:"flex-end",around:"space-around",between:"space-between"},R=({hAlignContent:e})=>Array.isArray(e)?e.map(r=>_[r]):e?_[e]:"flex-start";var be=e=>{let r={justifyContent:e.vertical?W(e):R(e),alignItems:e.vertical?R(e):W(e)};return(e.grow||e.shrink||e.basis)&&(r.flexGrow=J(e),r.flexShrink=K(e),r.flexBasis=Q(e)),e.vertical&&(r.flexDirection=U(e)),e.wrap&&(r.flexWrap=Y(e)),r},G=l.forwardRef((he,ne)=>{var E=he,{as:e,basis:r,children:o,display:n,element:v="FLEX",hAlignContent:H,grow:S,marginTop:u,marginRight:y,marginBottom:m,marginLeft:x,margin:c,marginX:P,marginY:g,paddingTop:T,paddingRight:b,paddingBottom:h,paddingLeft:O,padding:A,paddingX:F,paddingY:d,maxWidth:C,minWidth:ee="size0",width:k,height:B,minHeight:re,maxHeight:te,size:w,shrink:M,vertical:z,vAlignContent:N,wrap:D}=E,oe=q(E,["as","basis","children","display","element","hAlignContent","grow","marginTop","marginRight","marginBottom","marginLeft","margin","marginX","marginY","paddingTop","paddingRight","paddingBottom","paddingLeft","padding","paddingX","paddingY","maxWidth","minWidth","width","height","minHeight","maxHeight","size","shrink","vertical","vAlignContent","wrap"]);let se=l.useMemo(()=>be({basis:r,hAlignContent:H,grow:S,shrink:M,vertical:z,vAlignContent:N,wrap:D}),[r,H,S,M,z,N,D]);w&&(k||B)&&console.error("[Paste Flex]: you cannot set a height or width when using the size attribute"),(P&&(c||m||x||y||u)||g&&(c||m||x||y||u))&&console.error("[Paste Flex]: you cannot set a top, right, bottom or left margin when using the marginX or marginY attributes."),(F&&(A||h||O||b||T)||d&&(A||h||O||b||T))&&console.error("[Paste Flex]: you cannot set a top, right, bottom or left padding when using the paddingX or paddingY attributes.");let ie=P||g?{marginX:P,marginY:g}:{margin:c,marginBottom:m,marginLeft:x,marginRight:y,marginTop:u},pe=F||d?{paddingX:F,paddingY:d}:{padding:A,paddingBottom:h,paddingLeft:O,paddingRight:b,paddingTop:T},ae=w?{size:w}:{height:B,width:k};return l.createElement(ye,a(V(a(a(V(a(a({},se),me(oe)),{ref:ne,as:e,display:n,element:v}),ie),pe),{minHeight:re,maxHeight:te,maxWidth:C,minWidth:ee}),ae),o)});G.displayName="Flex";G.defaultProps={display:"flex"};G.propTypes={as:t.string,display:s(t.oneOf(["flex","inline-flex"])),element:t.string,vertical:s(t.bool),vAlignContent:s(t.oneOf(["top","center","bottom","stretch"])),hAlignContent:s(t.oneOf(["left","center","right","around","between"])),grow:s(t.oneOfType([t.bool,t.number])),shrink:s(t.oneOfType([t.bool,t.number])),basis:s(t.oneOfType([t.string,t.number])),wrap:s(t.bool),width:$,minWidth:xe,maxWidth:ce,height:Pe,minHeight:ge,maxHeight:Te,size:$,margin:p,marginTop:p,marginRight:p,marginBottom:p,marginLeft:p,marginX:p,marginY:p,padding:i,paddingTop:i,paddingRight:i,paddingBottom:i,paddingLeft:i,paddingX:i,paddingY:i};export{G as Flex};
