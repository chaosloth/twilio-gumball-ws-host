var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  ChatBubble: () => ChatBubble,
  ChatMessage: () => ChatMessage,
  ChatMessageMeta: () => ChatMessageMeta,
  ChatMessageMetaItem: () => ChatMessageMetaItem
});

// src/ChatBubble.tsx
var React2 = __toESM(require("react"));
var PropTypes = __toESM(require("prop-types"));
var import_box = require("@twilio-paste/box");

// src/MessageVariantContext.tsx
var React = __toESM(require("react"));
var MessageVariantContext = React.createContext("inbound");

// src/styles.ts
var bubbleVariantStyles = {
  inbound: {
    backgroundColor: "colorBackground"
  },
  outbound: {
    backgroundColor: "colorBackgroundPrimaryWeakest"
  }
};
var messageVariantStyles = {
  inbound: {
    marginRight: "space70"
  },
  outbound: {
    marginLeft: "space70"
  }
};

// src/ChatBubble.tsx
var ChatBubble = React2.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "CHAT_BUBBLE" } = _b, props = __objRest(_b, ["children", "element"]);
  const variant = React2.useContext(MessageVariantContext);
  return /* @__PURE__ */ React2.createElement(import_box.Box, __spreadValues(__spreadValues({
    fontSize: "fontSize30",
    lineHeight: "lineHeight20",
    borderRadius: "borderRadius30",
    paddingY: "space30",
    paddingX: "space40",
    marginBottom: "space30",
    element,
    ref,
    variant
  }, bubbleVariantStyles[variant]), (0, import_box.safelySpreadBoxProps)(props)), children);
});
ChatBubble.displayName = "ChatBubble";
ChatBubble.propTypes = {
  children: PropTypes.node,
  element: PropTypes.string
};

// src/ChatMessage.tsx
var React3 = __toESM(require("react"));
var PropTypes2 = __toESM(require("prop-types"));
var import_box2 = require("@twilio-paste/box");
var ChatMessage = React3.forwardRef((_a, ref) => {
  var _b = _a, { children, variant, element = "CHAT_MESSAGE" } = _b, props = __objRest(_b, ["children", "variant", "element"]);
  return /* @__PURE__ */ React3.createElement(MessageVariantContext.Provider, {
    value: variant
  }, /* @__PURE__ */ React3.createElement(import_box2.Box, __spreadValues(__spreadValues({
    as: "li",
    listStyleType: "none",
    marginBottom: "space80",
    ref,
    element,
    variant
  }, messageVariantStyles[variant]), (0, import_box2.safelySpreadBoxProps)(props)), children));
});
ChatMessage.displayName = "ChatMessage";
ChatMessage.propTypes = {
  children: PropTypes2.node,
  variant: PropTypes2.oneOf(["inbound", "outbound"]).isRequired,
  element: PropTypes2.string
};

// src/ChatMessageMeta.tsx
var React4 = __toESM(require("react"));
var PropTypes3 = __toESM(require("prop-types"));
var import_box3 = require("@twilio-paste/box");
var ChatMessageMeta = React4.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "CHAT_MESSAGE_META" } = _b, props = __objRest(_b, ["children", "element"]);
  const variant = React4.useContext(MessageVariantContext);
  const hasMultipleChildren = React4.Children.count(children) > 1;
  return /* @__PURE__ */ React4.createElement(import_box3.Box, __spreadValues({
    ref,
    element,
    display: "flex",
    justifyContent: hasMultipleChildren ? "space-between" : "flex-end",
    textAlign: !hasMultipleChildren ? "right" : void 0,
    alignItems: "flex-start",
    variant,
    columnGap: "space40"
  }, (0, import_box3.safelySpreadBoxProps)(props)), children);
});
ChatMessageMeta.displayName = "ChatMessageMeta";
ChatMessageMeta.propTypes = {
  "aria-label": PropTypes3.string.isRequired,
  children: PropTypes3.node.isRequired,
  element: PropTypes3.string
};

// src/ChatMessageMetaItem.tsx
var React5 = __toESM(require("react"));
var PropTypes4 = __toESM(require("prop-types"));
var import_box4 = require("@twilio-paste/box");
var ChatMessageMetaItem = React5.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "CHAT_MESSAGE_META_ITEM" } = _b, props = __objRest(_b, ["children", "element"]);
  return /* @__PURE__ */ React5.createElement(import_box4.Box, __spreadValues({
    ref,
    element,
    display: "flex",
    alignItems: "center",
    columnGap: "space30",
    color: "colorTextWeak",
    lineHeight: "lineHeight20",
    fontSize: "fontSize20",
    _last: { textAlign: "right" }
  }, (0, import_box4.safelySpreadBoxProps)(props)), children);
});
ChatMessageMetaItem.displayName = "ChatMessageMetaItem";
ChatMessageMetaItem.propTypes = {
  children: PropTypes4.node.isRequired,
  element: PropTypes4.string
};
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ChatBubble,
  ChatMessage,
  ChatMessageMeta,
  ChatMessageMetaItem
});
