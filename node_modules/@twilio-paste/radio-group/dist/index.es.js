var G=Object.defineProperty,M=Object.defineProperties;var _=Object.getOwnPropertyDescriptors;var b=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable;var B=(e,r,o)=>r in e?G(e,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[r]=o,p=(e,r)=>{for(var o in r||(r={}))I.call(r,o)&&B(e,o,r[o]);if(b)for(var o of b(r))H.call(r,o)&&B(e,o,r[o]);return e},g=(e,r)=>M(e,_(r));var C=(e,r)=>{var o={};for(var n in e)I.call(e,n)&&r.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&b)for(var n of b(e))r.indexOf(n)<0&&H.call(e,n)&&(o[n]=e[n]);return o};import*as t from"react";import*as c from"prop-types";import{useUID as O}from"@twilio-paste/uid-library";import{Box as E}from"@twilio-paste/box";import{BaseRadioCheckboxControl as q,BaseRadioCheckboxLabel as A,BaseRadioCheckboxLabelText as D,BaseRadioCheckboxHelpText as z}from"@twilio-paste/base-radio-checkbox";import*as k from"react";var P=k.createContext({name:"",value:"",disabled:!1,hasError:!1,onChange:()=>{}});var N=t.forwardRef((e,r)=>t.createElement(E,p({as:"input",type:"radio",size:"size0",border:"none",overflow:"hidden",padding:"space0",margin:"space0",whiteSpace:"nowrap",textTransform:"none",position:"absolute",clip:"rect(0 0 0 0)",ref:r},e)));N.displayName="HiddenRadio";var V=t.forwardRef((v,x)=>{var f=v,{id:e,name:r,element:o="RADIO",value:n,checked:s,disabled:l,hasError:R,onChange:u,children:y,helpText:m}=f,L=C(f,["id","name","element","value","checked","disabled","hasError","onChange","children","helpText"]);let h=O(),d=t.useContext(P),T={name:r!=null?r:d.name,checked:s!=null?s:d.value===n,disabled:l!=null?l:d.disabled,hasError:R!=null?R:d.hasError,onChange:u!=null?u:d.onChange};return t.createElement(E,{element:o,position:"relative",display:"inline-flex",alignItems:"flex-start",flexDirection:"column",verticalAlign:"top"},t.createElement(N,g(p(p({},L),T),{value:n,"aria-describedby":h,"aria-invalid":T.hasError,id:e,ref:x})),t.createElement(A,{disabled:T.disabled,htmlFor:e},t.createElement(q,{element:`${o}_CONTROL`,borderRadius:"borderRadiusCircle",disabled:T.disabled,type:"radio"},t.createElement(E,{as:"span",element:`${o}_CONTROL_CIRCLE`,lineHeight:"lineHeight0",display:"block",color:"inherit",size:"sizeIcon10"},t.createElement("svg",{role:"img","aria-hidden":!0,width:"100%",height:"100%",viewBox:"0 0 16 16",fill:"none"},t.createElement("circle",{fill:"currentColor",cx:8,cy:8,r:3})))),t.createElement(D,{element:`${o}_LABEL_TEXT`},y)),m&&t.createElement(z,{element:`${o}_HELP_TEXT_WRAPPER`,helpTextId:h},m))});V.displayName="Radio";import*as a from"react";import*as i from"prop-types";import{InlineControlGroup as $}from"@twilio-paste/inline-control-group";var w=a.forwardRef((L,m)=>{var x=L,{name:e,element:r="RADIO_GROUP",value:o,onChange:n,disabled:s=!1,errorText:l,children:R,i18nRequiredLabel:u="(required)"}=x,y=C(x,["name","element","value","onChange","disabled","errorText","children","i18nRequiredLabel"]);let v=a.useMemo(()=>h=>{n!=null&&n(h.target.value)},[n]),f=a.useMemo(()=>({name:e,value:o||"",disabled:s,hasError:l!=null,onChange:v}),[e,o,s,l,v]);return a.createElement(P.Provider,{value:f},a.createElement($,g(p({element:r},y),{disabled:s,errorText:l,name:e,ref:m,i18nRequiredLabel:u}),R))});w.displayName="RadioGroup";w.propTypes={name:i.string.isRequired,onChange:i.func.isRequired,value:i.string,element:i.string,i18nRequiredLabel:i.string};export{V as Radio,w as RadioGroup};
