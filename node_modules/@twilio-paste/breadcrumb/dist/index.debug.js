var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Breadcrumb: () => Breadcrumb,
  BreadcrumbItem: () => BreadcrumbItem
});
var React = __toESM(require("react"));
var PropTypes = __toESM(require("prop-types"));
var import_box = require("@twilio-paste/box");
var import_anchor = require("@twilio-paste/anchor");
var import_text = require("@twilio-paste/text");
var import_uid_library = require("@twilio-paste/uid-library");
var BreadcrumbSeparator = ({ element }) => /* @__PURE__ */ React.createElement(import_text.Text, {
  as: "span",
  color: "colorTextWeak",
  fontSize: "fontSize20",
  lineHeight: "lineHeight20",
  paddingLeft: "space20",
  paddingRight: "space20",
  role: "presentation",
  element: `${element}_SEPARATOR`
}, "/");
var DEFAULT_ELEMENT_NAME = "BREADCRUMB";
var BreadcrumbItem = React.forwardRef((_a, ref) => {
  var _b = _a, { children, element, parentElement, href, last } = _b, props = __objRest(_b, ["children", "element", "parentElement", "href", "last"]);
  const elementName = element || parentElement || DEFAULT_ELEMENT_NAME;
  return /* @__PURE__ */ React.createElement(import_box.Box, {
    alignItems: "center",
    as: "li",
    color: "colorText",
    display: "inline-flex",
    element: `${elementName}_ITEM`,
    fontSize: "fontSize20",
    lineHeight: "lineHeight20"
  }, href ? /* @__PURE__ */ React.createElement(import_anchor.Anchor, __spreadProps(__spreadValues({}, props), {
    element: `${elementName}_ANCHOR`,
    href,
    ref
  }), children) : /* @__PURE__ */ React.createElement(import_text.Text, __spreadProps(__spreadValues({}, (0, import_text.safelySpreadTextProps)(props)), {
    "aria-current": "page",
    as: "span",
    element: `${elementName}_TEXT`,
    fontSize: "fontSize20",
    lineHeight: "lineHeight20",
    ref
  }), children), !last && /* @__PURE__ */ React.createElement(BreadcrumbSeparator, {
    element: elementName
  }));
});
BreadcrumbItem.displayName = "BreadcrumbItem";
if (false) {
  BreadcrumbItem.propTypes = {
    children: PropTypes.node.isRequired,
    element: PropTypes.string,
    href: PropTypes.string,
    last: PropTypes.bool
  };
}
var Breadcrumb = React.forwardRef((_a, ref) => {
  var _b = _a, { children, element = DEFAULT_ELEMENT_NAME } = _b, props = __objRest(_b, ["children", "element"]);
  const [childrenCount, validChildren] = React.useMemo(() => [
    React.Children.count(children),
    React.Children.toArray(children).filter((child) => React.isValidElement(child) || typeof child === "string")
  ], [children]);
  const keySeed = (0, import_uid_library.useUIDSeed)();
  return /* @__PURE__ */ React.createElement(import_box.Box, __spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
    "aria-label": "breadcrumb",
    as: "nav",
    element,
    ref
  }), /* @__PURE__ */ React.createElement(import_box.Box, {
    alignItems: "center",
    as: "ol",
    display: "inline-flex",
    listStyleType: "none",
    margin: "space0",
    padding: "space0"
  }, validChildren.map((child, index) => {
    return React.cloneElement(child, {
      last: childrenCount === index + 1,
      key: keySeed(`breadcrumb-${index}`),
      parentElement: element
    });
  })));
});
Breadcrumb.displayName = "Breadcrumb";
Breadcrumb.propTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string
};
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Breadcrumb,
  BreadcrumbItem
});
